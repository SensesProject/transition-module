{"remainingRequest":"/Users/francescamorini/projects/senses/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/senses/src/components/EmissionsChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/francescamorini/projects/senses/src/components/EmissionsChart.vue","mtime":1574701375927},{"path":"/Users/francescamorini/projects/senses/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/senses/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/senses/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/senses/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIExpYnJhcmllcwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMycKCmltcG9ydCB7IGdyb3VwLCBncm91cHMsIHJvbGx1cCwgcm9sbHVwcyB9IGZyb20gJ2QzLWFycmF5JwoKLy8gY29tcG9uZW50cwppbXBvcnQgRHJhZ2xpbmUgZnJvbSAnLi9zdWJjb21wb25lbnRzL0RyYWdsaW5lLnZ1ZScKCi8vIERhdGEKaW1wb3J0IEVtaXNzaW9uRGF0YSBmcm9tICcuLi9hc3NldHMvZGF0YS9lbWlzc2lvbnMtbWVyZ2VkLmpzb24nCmltcG9ydCBIaXN0b3JpY2FsRW1pc3Npb25zIGZyb20gJy4uL2Fzc2V0cy9kYXRhL2VtaXNzaW9uc19oaXN0b3JpY2FsLmpzb24nCgovLyBtZXJnZSBkYXRhIGludG8gb25lIGZpbGUKLy8gZnVuY3Rpb24gbWVyZ2UgKCl7Ci8vICAgY29uc3QgbWVyZ2VkID0gZW1pc3Npb25zRGF0YS5tYXAoZSA9PiB7Ci8vICAgICBjb25zb2xlLmxvZyhlLlllYXIpCgovLyAgICAgcmV0dXJuIHsKLy8gICAgICAgLi4uZW1pc3Npb25zRGF0YS5maW5kKGQgPT4gZC5ZZWFyID09PSBlLlllYXIpLAovLyAgICAgICAuLi5zdWJFbWlzc2lvbnNEYXRhLmZpbmQoZCA9PiBkLlllYXIgPT09IGUuWWVhciksCi8vICAgICAgIC4uLkFwcGxpY2F0aW9uc1NoYXJlLmZpbmQoZCA9PiBkLlllYXIgPT09IGUuWWVhcikKLy8gICAgIH0KLy8gICB9KQovLyAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KG1lcmdlZCkpCi8vIH0KLy8gbWVyZ2UoKQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdFbWlzc2lvbnNDaGFydCcsCiAgY29tcG9uZW50czogewogICAgRHJhZ2xpbmUKICB9LAogIHByb3BzOiB7CiAgICB3aWR0aDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgaGVpZ2h0OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBzdGVwOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMAogICAgfQogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBtYXJnaW46IHsKICAgICAgICBsZWZ0OiA3MCwKICAgICAgICB0b3A6IDMwLAogICAgICAgIGJvdHRvbTogMzAsCiAgICAgICAgcmlnaHQ6IDMwCiAgICAgIH0KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBzdGVwOiBmdW5jdGlvbiAoc3RlcCkgewogICAgICBjb25zb2xlLmxvZyhzdGVwLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCkKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBpbm5lcldpZHRoICgpIHsKICAgICAgcmV0dXJuIHRoaXMud2lkdGggLSB0aGlzLm1hcmdpbi5sZWZ0IC0gdGhpcy5tYXJnaW4ucmlnaHQKICAgIH0sCiAgICBpbm5lckhlaWdodCAoKSB7CiAgICAgIHJldHVybiB0aGlzLmhlaWdodCAtIHRoaXMubWFyZ2luLnRvcCAtIHRoaXMubWFyZ2luLmJvdHRvbQogICAgfSwKICAgIG1heFllYXI6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHRoaXMuc3RlcCA+PSAyID8gMjAxNSA6IDIwODAKICAgIH0sCiAgICBsaW5lRGF0YTogZnVuY3Rpb24gKCkgewogICAgICAvLyBvdGhlciB3YXkgb2YgZG9pbmcgaXQ6CiAgICAgIC8vIGNvbnN0IGRhdGEgPSBIaXN0b3JpY2FsRW1pc3Npb25zLmZpbHRlcihkID0+IGQuWWVhciA8PSB0aGlzLm1heFllYXIpCiAgICAgIC8vIGNvbnN0IHJlZHVjZWQgPSByb2xsdXBzKGRhdGEsIHYgPT4gZDMuc3VtKHYsIGQgPT4gZC5WYWx1ZSksIGQgPT4gZC5ZZWFyKQogICAgICAvLyBjb25zb2xlLmxvZygnbGluZURhdGEnLCBkYXRhLCByZWR1Y2VkKQogICAgICByZXR1cm4gRW1pc3Npb25EYXRhLmZpbHRlcihkID0+IGQuWWVhciA8PSB0aGlzLm1heFllYXIpLm1hcChkID0+IFsKICAgICAgICBkLlllYXIsCiAgICAgICAgZC5FbWlzc2lvbnMKICAgICAgXSkKICAgIH0sCiAgICBsaW5lUGF0aCAoKSB7CiAgICAgIHJldHVybiBkMwogICAgICAgIC5saW5lKCkKICAgICAgICAueChkID0+IHsKICAgICAgICAgIHJldHVybiB0aGlzLnNjYWxlcy54KGRbMF0pCiAgICAgICAgfSkKICAgICAgICAueShkID0+IHsKICAgICAgICAgIHJldHVybiB0aGlzLnNjYWxlcy55KGRbMV0pCiAgICAgICAgfSkKICAgICAgICAuY3VydmUoZDMuY3VydmVMaW5lYXIpKHRoaXMubGluZURhdGEpCiAgICB9LAogICAgc2NhbGVzICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB4OiBkMwogICAgICAgICAgLnNjYWxlTGluZWFyKCkKICAgICAgICAgIC5kb21haW4oWzE5OTAsIHRoaXMubWF4WWVhcl0pCiAgICAgICAgICAucmFuZ2VSb3VuZChbMCwgdGhpcy5pbm5lcldpZHRoXSksCiAgICAgICAgeTogZDMKICAgICAgICAgIC5zY2FsZUxpbmVhcigpCiAgICAgICAgICAuZG9tYWluKFswLCA0MDAwMDAwMF0pCiAgICAgICAgICAucmFuZ2VSb3VuZChbdGhpcy5pbm5lckhlaWdodCwgMF0pCiAgICAgIH0KICAgIH0sCiAgICBzdWJzZWN0b3JzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbCiAgICAgICAgeyBrZXk6ICdQdWJsaWMnLCBjb2xvcjogJyMzMzEyMWMnLCBhY3RpdmU6IDMuMSB9LAogICAgICAgIHsga2V5OiAnQXV0b3Byb2R1Y2VkJywgY29sb3I6ICcjMzMxMjFjJywgYWN0aXZlOiAzLjEgfSwKICAgICAgICB7IGtleTogJ090aGVyRW4nLCBjb2xvcjogJyM2MTE3MzEnLCBhY3RpdmU6IDMuMiB9LAogICAgICAgIHsga2V5OiAnQ29tYnVzdGlvbicsIGNvbG9yOiAnI2RkNWY4NCcsIGFjdGl2ZTogMy4zIH0sCiAgICAgICAgeyBrZXk6ICdQcm9kdWN0aW9uJywgY29sb3I6ICcjZGQ1Zjg0JywgYWN0aXZlOiAzLjMgfSwKICAgICAgICB7IGtleTogJ1NvbHZlbnRzJywgY29sb3I6ICcjZGQ1Zjg0JywgYWN0aXZlOiAzLjMgfSwKICAgICAgICB7IGtleTogJ090aGVyUHJvYycsIGNvbG9yOiAnI2RkNWY4NCcsIGFjdGl2ZTogMy4zIH0sCiAgICAgICAgeyBrZXk6ICdJbmRXYXN0ZScsIGNvbG9yOiAnI2RkNWY4NCcsIGFjdGl2ZTogMy4zIH0sCiAgICAgICAgeyBrZXk6ICdBdmlhdGlvbicsIGNvbG9yOiAnI2VkOTZhYicsIGFjdGl2ZTogMy40IH0sCiAgICAgICAgeyBrZXk6ICdSb2FkJywgY29sb3I6ICcjZWQ5NmFiJywgYWN0aXZlOiAzLjQgfSwKICAgICAgICB7IGtleTogJ090aGVyJywgY29sb3I6ICcjZWQ5NmFiJywgYWN0aXZlOiAzLjQgfSwKICAgICAgICB7IGtleTogJ1NoaXBwaW5nJywgY29sb3I6ICcjZWQ5NmFiJywgYWN0aXZlOiAzLjQgfSwKICAgICAgICB7IGtleTogJ0NvbW1SZXMnLCBjb2xvcjogJyNmOGNiZDQnLCBhY3RpdmU6IDMuNSB9LAogICAgICAgIHsga2V5OiAnQWdyaWN1bHR1cmUnLCBjb2xvcjogJyNmOGNiZDQnLCBhY3RpdmU6IDMuNSB9CiAgICAgIF0KICAgIH0sCiAgICBhcHBsaWNhdGlvbnM6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFsKICAgICAgICB7IGtleTogJ0VsZWN0cmljaXR5JywgY29sb3I6ICcjMzMxMjFjJywgYWN0aXZlOiAzLjEgfSwKICAgICAgICB7IGtleTogJ090aGVyRW5lcmd5JywgY29sb3I6ICcjNjExNzMxJywgYWN0aXZlOiAzLjEgfSwKICAgICAgICB7IGtleTogJ0luZHVzdHJ5JywgY29sb3I6ICcjZGQ1Zjg0JywgYWN0aXZlOiAzLjEgfSwKICAgICAgICB7IGtleTogJ1RyYW5zcG9ydHMnLCBjb2xvcjogJyNlZDk2YWInLCBhY3RpdmU6IDMuMSB9LAogICAgICAgIHsga2V5OiAnQnVpbGRpbmcnLCBjb2xvcjogJyNmOGNiZDQnLCBhY3RpdmU6IDMuMSB9CiAgICAgIF0KICAgIH0sCgogICAgYXBwbGljYXRpb25zRGF0YTogZnVuY3Rpb24gKCkgewogICAgICBjb25zdCBzdGFja2VkID0gZDMuc3RhY2soKS5rZXlzKHRoaXMuYXBwbGljYXRpb25zLm1hcChkID0+IGQua2V5KSkoCiAgICAgICAgRW1pc3Npb25EYXRhCiAgICAgICkKCiAgICAgIHJldHVybiBzdGFja2VkLm1hcCgoZCwgaSkgPT4gKHsKICAgICAgICBkOiB0aGlzLmFyZWFHZW5lcmF0b3IoZCksCiAgICAgICAgY29sb3I6IHRoaXMuYXBwbGljYXRpb25zW2ldLmNvbG9yLAogICAgICAgIGlkOiB0aGlzLmFwcGxpY2F0aW9uc1tpXS5rZXkKICAgICAgfSkpCiAgICB9LAogICAgc3Vic2VjdG9yc0RhdGE6IGZ1bmN0aW9uICgpIHsKICAgICAgY29uc3Qgc3RhY2tlZCA9IGQzLnN0YWNrKCkua2V5cyh0aGlzLnN1YnNlY3RvcnMubWFwKGQgPT4gZC5rZXkpKSgKICAgICAgICBFbWlzc2lvbkRhdGEKICAgICAgKQoKICAgICAgcmV0dXJuIHN0YWNrZWQubWFwKChkLCBpKSA9PiAoewogICAgICAgIGQ6IHRoaXMuYXJlYUdlbmVyYXRvcihkKSwKICAgICAgICBjb2xvcjogdGhpcy5zdWJzZWN0b3JzW2ldLmNvbG9yLAogICAgICAgIGlkOiB0aGlzLnN1YnNlY3RvcnNbaV0ua2V5LAogICAgICAgIGFjdGl2ZTogdGhpcy5zdWJzZWN0b3JzW2ldLmFjdGl2ZSwKICAgICAgICBkYXRhOiBkCiAgICAgIH0pKQogICAgfSwKICAgIHN1YnNlY3RvcnNEYXRhQWN0aXZlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLnN1YnNlY3RvcnNEYXRhLmZpbHRlcihkID0+IGQuYWN0aXZlID09PSB0aGlzLnN0ZXApCiAgICB9LAogICAgYXJlYUdlbmVyYXRvcjogZnVuY3Rpb24gKCkgewogICAgICBjb25zdCB7IHgsIHkgfSA9IHRoaXMuc2NhbGVzCiAgICAgIHJldHVybiBkMwogICAgICAgIC5hcmVhKCkKICAgICAgICAueChkID0+IHgoZC5kYXRhLlllYXIpKQogICAgICAgIC5jdXJ2ZShkMy5jdXJ2ZUxpbmVhcikKICAgICAgICAueTAoZCA9PiB5KGRbMF0pKQogICAgICAgIC55MShkID0+IHkoZFsxXSkpCiAgICB9CiAgfSwKICBkaXJlY3RpdmVzOiB7CiAgICBheGlzIChlbCwgYmluZGluZykgewogICAgICBjb25zdCBheGlzID0gYmluZGluZy5hcmcKICAgICAgLy8gY29uc29sZS5sb2coImF4aXMiLCBheGlzKTsKICAgICAgY29uc3QgYXhpc01ldGhvZCA9IHsgeDogJ2F4aXNCb3R0b20nLCB5OiAnYXhpc0xlZnQnIH1bYXhpc10KICAgICAgY29uc3QgdGlja0Zvcm1hdCA9IHsgeDogZDMuZm9ybWF0KCdkJyksIHk6IGQzLmZvcm1hdCgnLjJzJykgfVtheGlzXQogICAgICBjb25zdCBtZXRob2RBcmcgPSBiaW5kaW5nLnZhbHVlW2F4aXNdCgogICAgICBkMy5zZWxlY3QoZWwpCiAgICAgICAgLnRyYW5zaXRpb24oKQogICAgICAgIC5kdXJhdGlvbigxMDAwKQogICAgICAgIC5jYWxsKGQzW2F4aXNNZXRob2RdKG1ldGhvZEFyZykudGlja0Zvcm1hdCh0aWNrRm9ybWF0KSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["EmissionsChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"EmissionsChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"visualization\" id=\"emissions__chart\">\n    <svg class=\"emissions\" width=\"100%\" height=\"100%\">\n      <g :transform=\"'translate(' + margin.left + ',' + margin.top + ')'\">\n        <g\n          class=\"axis\"\n          v-axis:x=\"scales\"\n          :transfrom=\"'translate(' + 0 + ',' + this.innerHeight + ')'\"\n        />\n        <g class=\"axis\" v-axis:y=\"scales\" />\n        <g id=\"first_step\" v-if=\"step <= 2\">\n          <path id=\"emissions\" :d=\"linePath\" />\n        </g>\n        <g class=\"applicationsData\" v-if=\"step >= 3\">\n          <path\n            v-for=\"(chunk, i) in applicationsData\"\n            v-bind:key=\"i\"\n            :d=\"chunk.d\"\n            :fill=\"chunk.color\"\n            :id=\"chunk.id\"\n            class=\"emission__chunks\"\n            :class=\"{ inactive: step >= 3.1 }\"\n          />\n        </g>\n        <g class=\"subsectorsData\" v-if=\"step >= 3.1\">\n          <path\n            v-for=\"(chunk, i) in subsectorsData\"\n            v-bind:key=\"i\"\n            :d=\"chunk.d\"\n            :fill=\"chunk.color\"\n            :id=\"chunk.id\"\n            class=\"emission__chunks\"\n            :class=\"{ inactive: chunk.active != step }\"\n          />\n        </g>\n        <dragline\n          v-if=\"step > 3\"\n          :width=\"this.innerWidth\"\n          :margin=\"margin\"\n          :height=\"this.innerHeight\"\n          :scales=\"scales\"\n          :data=\"subsectorsDataActive\"\n        />\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\n// Libraries\nimport * as d3 from 'd3'\n\nimport { group, groups, rollup, rollups } from 'd3-array'\n\n// components\nimport Dragline from './subcomponents/Dragline.vue'\n\n// Data\nimport EmissionData from '../assets/data/emissions-merged.json'\nimport HistoricalEmissions from '../assets/data/emissions_historical.json'\n\n// merge data into one file\n// function merge (){\n//   const merged = emissionsData.map(e => {\n//     console.log(e.Year)\n\n//     return {\n//       ...emissionsData.find(d => d.Year === e.Year),\n//       ...subEmissionsData.find(d => d.Year === e.Year),\n//       ...ApplicationsShare.find(d => d.Year === e.Year)\n//     }\n//   })\n//   console.log(JSON.stringify(merged))\n// }\n// merge()\n\nexport default {\n  name: 'EmissionsChart',\n  components: {\n    Dragline\n  },\n  props: {\n    width: {\n      type: Number,\n      required: true\n    },\n    height: {\n      type: Number,\n      required: true\n    },\n    step: {\n      type: Number,\n      default: 0\n    }\n  },\n  data () {\n    return {\n      margin: {\n        left: 70,\n        top: 30,\n        bottom: 30,\n        right: 30\n      }\n    }\n  },\n  watch: {\n    step: function (step) {\n      console.log(step, this.width, this.height)\n    }\n  },\n  computed: {\n    innerWidth () {\n      return this.width - this.margin.left - this.margin.right\n    },\n    innerHeight () {\n      return this.height - this.margin.top - this.margin.bottom\n    },\n    maxYear: function () {\n      return this.step >= 2 ? 2015 : 2080\n    },\n    lineData: function () {\n      // other way of doing it:\n      // const data = HistoricalEmissions.filter(d => d.Year <= this.maxYear)\n      // const reduced = rollups(data, v => d3.sum(v, d => d.Value), d => d.Year)\n      // console.log('lineData', data, reduced)\n      return EmissionData.filter(d => d.Year <= this.maxYear).map(d => [\n        d.Year,\n        d.Emissions\n      ])\n    },\n    linePath () {\n      return d3\n        .line()\n        .x(d => {\n          return this.scales.x(d[0])\n        })\n        .y(d => {\n          return this.scales.y(d[1])\n        })\n        .curve(d3.curveLinear)(this.lineData)\n    },\n    scales () {\n      return {\n        x: d3\n          .scaleLinear()\n          .domain([1990, this.maxYear])\n          .rangeRound([0, this.innerWidth]),\n        y: d3\n          .scaleLinear()\n          .domain([0, 40000000])\n          .rangeRound([this.innerHeight, 0])\n      }\n    },\n    subsectors: function () {\n      return [\n        { key: 'Public', color: '#33121c', active: 3.1 },\n        { key: 'Autoproduced', color: '#33121c', active: 3.1 },\n        { key: 'OtherEn', color: '#611731', active: 3.2 },\n        { key: 'Combustion', color: '#dd5f84', active: 3.3 },\n        { key: 'Production', color: '#dd5f84', active: 3.3 },\n        { key: 'Solvents', color: '#dd5f84', active: 3.3 },\n        { key: 'OtherProc', color: '#dd5f84', active: 3.3 },\n        { key: 'IndWaste', color: '#dd5f84', active: 3.3 },\n        { key: 'Aviation', color: '#ed96ab', active: 3.4 },\n        { key: 'Road', color: '#ed96ab', active: 3.4 },\n        { key: 'Other', color: '#ed96ab', active: 3.4 },\n        { key: 'Shipping', color: '#ed96ab', active: 3.4 },\n        { key: 'CommRes', color: '#f8cbd4', active: 3.5 },\n        { key: 'Agriculture', color: '#f8cbd4', active: 3.5 }\n      ]\n    },\n    applications: function () {\n      return [\n        { key: 'Electricity', color: '#33121c', active: 3.1 },\n        { key: 'OtherEnergy', color: '#611731', active: 3.1 },\n        { key: 'Industry', color: '#dd5f84', active: 3.1 },\n        { key: 'Transports', color: '#ed96ab', active: 3.1 },\n        { key: 'Building', color: '#f8cbd4', active: 3.1 }\n      ]\n    },\n\n    applicationsData: function () {\n      const stacked = d3.stack().keys(this.applications.map(d => d.key))(\n        EmissionData\n      )\n\n      return stacked.map((d, i) => ({\n        d: this.areaGenerator(d),\n        color: this.applications[i].color,\n        id: this.applications[i].key\n      }))\n    },\n    subsectorsData: function () {\n      const stacked = d3.stack().keys(this.subsectors.map(d => d.key))(\n        EmissionData\n      )\n\n      return stacked.map((d, i) => ({\n        d: this.areaGenerator(d),\n        color: this.subsectors[i].color,\n        id: this.subsectors[i].key,\n        active: this.subsectors[i].active,\n        data: d\n      }))\n    },\n    subsectorsDataActive: function () {\n      return this.subsectorsData.filter(d => d.active === this.step)\n    },\n    areaGenerator: function () {\n      const { x, y } = this.scales\n      return d3\n        .area()\n        .x(d => x(d.data.Year))\n        .curve(d3.curveLinear)\n        .y0(d => y(d[0]))\n        .y1(d => y(d[1]))\n    }\n  },\n  directives: {\n    axis (el, binding) {\n      const axis = binding.arg\n      // console.log(\"axis\", axis);\n      const axisMethod = { x: 'axisBottom', y: 'axisLeft' }[axis]\n      const tickFormat = { x: d3.format('d'), y: d3.format('.2s') }[axis]\n      const methodArg = binding.value[axis]\n\n      d3.select(el)\n        .transition()\n        .duration(1000)\n        .call(d3[axisMethod](methodArg).tickFormat(tickFormat))\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"library/src/style/variables.scss\";\n.visualization {\n  width: inherit;\n  height: inherit;\n}\n\n#emissions {\n  stroke: $color-red;\n  fill: none;\n}\n\n.emission__chunks {\n  stroke: $color-gray;\n}\n\n.subsectorsData {\n  .inactive {\n    display: none;\n  }\n}\n\n.applicationsData {\n  .inactive {\n    fill-opacity: 0.1;\n  }\n}\n</style>\n"]}]}