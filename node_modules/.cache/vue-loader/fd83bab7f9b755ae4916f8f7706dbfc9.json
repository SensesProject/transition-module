{"remainingRequest":"/Users/francescamorini/projects/senses/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/senses/src/components/EmissionsChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/francescamorini/projects/senses/src/components/EmissionsChart.vue","mtime":1575649855858},{"path":"/Users/francescamorini/projects/senses/node_modules/cache-loader/dist/cjs.js","mtime":1575047512487},{"path":"/Users/francescamorini/projects/senses/node_modules/babel-loader/lib/index.js","mtime":1575047512399},{"path":"/Users/francescamorini/projects/senses/node_modules/cache-loader/dist/cjs.js","mtime":1575047512487},{"path":"/Users/francescamorini/projects/senses/node_modules/vue-loader/lib/index.js","mtime":1575047516506}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIExpYnJhcmllcwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMycKCmltcG9ydCB7IGdyb3VwLCBncm91cHMsIHJvbGx1cCwgcm9sbHVwcyB9IGZyb20gJ2QzLWFycmF5JwoKLy8gY29tcG9uZW50cwppbXBvcnQgRW1pc3Npb25zRG90cyBmcm9tICcuL3N1YmNvbXBvbmVudHMvRW1pc3Npb25zRG90cy52dWUnCmltcG9ydCBEcmFnbGluZSBmcm9tICcuL3N1YmNvbXBvbmVudHMvRHJhZ2xpbmUudnVlJwoKLy8gRGF0YQppbXBvcnQgRW1pc3Npb25EYXRhIGZyb20gJy4uL2Fzc2V0cy9kYXRhL2VtaXNzaW9ucy1tZXJnZWQuanNvbicKaW1wb3J0IEhpc3RvcmljYWxFbWlzc2lvbnMgZnJvbSAnLi4vYXNzZXRzL2RhdGEvZW1pc3Npb25zX2hpc3RvcmljYWwuanNvbicKCi8vIG1lcmdlIGRhdGEgaW50byBvbmUgZmlsZQovLyBmdW5jdGlvbiBtZXJnZSAoKXsKLy8gICBjb25zdCBtZXJnZWQgPSBlbWlzc2lvbnNEYXRhLm1hcChlID0+IHsKLy8gICAgIGNvbnNvbGUubG9nKGUuWWVhcikKCi8vICAgICByZXR1cm4gewovLyAgICAgICAuLi5lbWlzc2lvbnNEYXRhLmZpbmQoZCA9PiBkLlllYXIgPT09IGUuWWVhciksCi8vICAgICAgIC4uLnN1YkVtaXNzaW9uc0RhdGEuZmluZChkID0+IGQuWWVhciA9PT0gZS5ZZWFyKSwKLy8gICAgICAgLi4uQXBwbGljYXRpb25zU2hhcmUuZmluZChkID0+IGQuWWVhciA9PT0gZS5ZZWFyKQovLyAgICAgfQovLyAgIH0pCi8vICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkobWVyZ2VkKSkKLy8gfQovLyBtZXJnZSgpCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0VtaXNzaW9uc0NoYXJ0JywKICBjb21wb25lbnRzOiB7CiAgICBFbWlzc2lvbnNEb3RzLAogICAgRHJhZ2xpbmUKICB9LAogIHByb3BzOiB7CiAgICB3aWR0aDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgaGVpZ2h0OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBzdGVwOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMAogICAgfQogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBtYXJnaW46IHsKICAgICAgICBsZWZ0OiAyNTAsCiAgICAgICAgdG9wOiAzMCwKICAgICAgICBib3R0b206IDMwLAogICAgICAgIHJpZ2h0OiAzMAogICAgICB9CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgc3RlcDogZnVuY3Rpb24gKHN0ZXApIHsKICAgICAgY29uc29sZS5sb2coc3RlcCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgaW5uZXJXaWR0aCAoKSB7CiAgICAgIHJldHVybiB0aGlzLndpZHRoIC0gdGhpcy5tYXJnaW4ubGVmdCAtIHRoaXMubWFyZ2luLnJpZ2h0CiAgICB9LAogICAgaW5uZXJIZWlnaHQgKCkgewogICAgICByZXR1cm4gdGhpcy5oZWlnaHQgLSB0aGlzLm1hcmdpbi50b3AgLSB0aGlzLm1hcmdpbi5ib3R0b20KICAgIH0sCiAgICBtYXhZZWFyOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLnN0ZXAgPj0gMiA/IDIwMTUgOiAyMDgwCiAgICB9LAogICAgbGluZURhdGE6IGZ1bmN0aW9uICgpIHsKICAgICAgLy8gb3RoZXIgd2F5IG9mIGRvaW5nIGl0OgogICAgICAvLyBjb25zdCBkYXRhID0gSGlzdG9yaWNhbEVtaXNzaW9ucy5maWx0ZXIoZCA9PiBkLlllYXIgPD0gdGhpcy5tYXhZZWFyKQogICAgICAvLyBjb25zdCByZWR1Y2VkID0gcm9sbHVwcyhkYXRhLCB2ID0+IGQzLnN1bSh2LCBkID0+IGQuVmFsdWUpLCBkID0+IGQuWWVhcikKICAgICAgLy8gY29uc29sZS5sb2coJ2xpbmVEYXRhJywgZGF0YSwgcmVkdWNlZCkKICAgICAgcmV0dXJuIEVtaXNzaW9uRGF0YS5maWx0ZXIoZCA9PiBkLlllYXIgPD0gdGhpcy5tYXhZZWFyKS5tYXAoZCA9PiBbCiAgICAgICAgZC5ZZWFyLAogICAgICAgIGQuRW1pc3Npb25zCiAgICAgIF0pCiAgICB9LAogICAgbGluZVBhdGggKCkgewogICAgICByZXR1cm4gZDMKICAgICAgICAubGluZSgpCiAgICAgICAgLngoZCA9PiB7CiAgICAgICAgICByZXR1cm4gdGhpcy5zY2FsZXMueChkWzBdKQogICAgICAgIH0pCiAgICAgICAgLnkoZCA9PiB7CiAgICAgICAgICByZXR1cm4gdGhpcy5zY2FsZXMueShkWzFdKQogICAgICAgIH0pCiAgICAgICAgLmN1cnZlKGQzLmN1cnZlTGluZWFyKSh0aGlzLmxpbmVEYXRhKQogICAgfSwKICAgIHNjYWxlcyAoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgeDogZDMKICAgICAgICAgIC5zY2FsZUxpbmVhcigpCiAgICAgICAgICAuZG9tYWluKFsxOTkwLCB0aGlzLm1heFllYXJdKQogICAgICAgICAgLnJhbmdlUm91bmQoWzAsIHRoaXMuaW5uZXJXaWR0aCAtIDIwMF0pLAogICAgICAgIHk6IGQzCiAgICAgICAgICAuc2NhbGVMaW5lYXIoKQogICAgICAgICAgLmRvbWFpbihbMCwgNDAwMDAwMDBdKQogICAgICAgICAgLnJhbmdlUm91bmQoW3RoaXMuaW5uZXJIZWlnaHQgLSB0aGlzLm1hcmdpbi5ib3R0b20sIDBdKQogICAgICB9CiAgICB9LAogICAgc3Vic2VjdG9yczogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gWwogICAgICAgIHsga2V5OiAnUHVibGljJywgY29sb3I6ICcjMzMxMjFjJywgYWN0aXZlOiAzLjEgfSwKICAgICAgICB7IGtleTogJ0F1dG9wcm9kdWNlZCcsIGNvbG9yOiAnIzMzMTIxYycsIGFjdGl2ZTogMy4xIH0sCiAgICAgICAgeyBrZXk6ICdPdGhlckVuJywgY29sb3I6ICcjNjExNzMxJywgYWN0aXZlOiAzLjIgfSwKICAgICAgICB7IGtleTogJ0NvbWJ1c3Rpb24nLCBjb2xvcjogJyNkZDVmODQnLCBhY3RpdmU6IDMuMyB9LAogICAgICAgIHsga2V5OiAnUHJvZHVjdGlvbicsIGNvbG9yOiAnI2RkNWY4NCcsIGFjdGl2ZTogMy4zIH0sCiAgICAgICAgeyBrZXk6ICdTb2x2ZW50cycsIGNvbG9yOiAnI2RkNWY4NCcsIGFjdGl2ZTogMy4zIH0sCiAgICAgICAgeyBrZXk6ICdPdGhlclByb2MnLCBjb2xvcjogJyNkZDVmODQnLCBhY3RpdmU6IDMuMyB9LAogICAgICAgIHsga2V5OiAnSW5kV2FzdGUnLCBjb2xvcjogJyNkZDVmODQnLCBhY3RpdmU6IDMuMyB9LAogICAgICAgIHsga2V5OiAnQXZpYXRpb24nLCBjb2xvcjogJyNlZDk2YWInLCBhY3RpdmU6IDMuNCB9LAogICAgICAgIHsga2V5OiAnUm9hZCcsIGNvbG9yOiAnI2VkOTZhYicsIGFjdGl2ZTogMy40IH0sCiAgICAgICAgeyBrZXk6ICdPdGhlcicsIGNvbG9yOiAnI2VkOTZhYicsIGFjdGl2ZTogMy40IH0sCiAgICAgICAgeyBrZXk6ICdTaGlwcGluZycsIGNvbG9yOiAnI2VkOTZhYicsIGFjdGl2ZTogMy40IH0sCiAgICAgICAgeyBrZXk6ICdDb21tUmVzJywgY29sb3I6ICcjZjhjYmQ0JywgYWN0aXZlOiAzLjUgfSwKICAgICAgICB7IGtleTogJ0FncmljdWx0dXJlJywgY29sb3I6ICcjZjhjYmQ0JywgYWN0aXZlOiAzLjUgfQogICAgICBdCiAgICB9LAogICAgYXBwbGljYXRpb25zOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbCiAgICAgICAgeyBrZXk6ICdFbGVjdHJpY2l0eScsIGNvbG9yOiAnIzMzMTIxYycsIGFjdGl2ZTogMy4xIH0sCiAgICAgICAgeyBrZXk6ICdPdGhlckVuZXJneScsIGNvbG9yOiAnIzYxMTczMScsIGFjdGl2ZTogMy4xIH0sCiAgICAgICAgeyBrZXk6ICdJbmR1c3RyeScsIGNvbG9yOiAnI2RkNWY4NCcsIGFjdGl2ZTogMy4xIH0sCiAgICAgICAgeyBrZXk6ICdUcmFuc3BvcnRzJywgY29sb3I6ICcjZWQ5NmFiJywgYWN0aXZlOiAzLjEgfSwKICAgICAgICB7IGtleTogJ0J1aWxkaW5nJywgY29sb3I6ICcjZjhjYmQ0JywgYWN0aXZlOiAzLjEgfQogICAgICBdCiAgICB9LAoKICAgIGFwcGxpY2F0aW9uc0RhdGE6IGZ1bmN0aW9uICgpIHsKICAgICAgY29uc3Qgc3RhY2tlZCA9IGQzLnN0YWNrKCkua2V5cyh0aGlzLmFwcGxpY2F0aW9ucy5tYXAoZCA9PiBkLmtleSkpKAogICAgICAgIEVtaXNzaW9uRGF0YQogICAgICApCgogICAgICByZXR1cm4gc3RhY2tlZC5tYXAoKGQsIGkpID0+ICh7CiAgICAgICAgZDogdGhpcy5hcmVhR2VuZXJhdG9yKGQpLAogICAgICAgIGNvbG9yOiB0aGlzLmFwcGxpY2F0aW9uc1tpXS5jb2xvciwKICAgICAgICBpZDogdGhpcy5hcHBsaWNhdGlvbnNbaV0ua2V5CiAgICAgIH0pKQogICAgfSwKICAgIHN1YnNlY3RvcnNEYXRhOiBmdW5jdGlvbiAoKSB7CiAgICAgIGNvbnN0IHN0YWNrZWQgPSBkMy5zdGFjaygpLmtleXModGhpcy5zdWJzZWN0b3JzLm1hcChkID0+IGQua2V5KSkoCiAgICAgICAgRW1pc3Npb25EYXRhCiAgICAgICkKCiAgICAgIHJldHVybiBzdGFja2VkLm1hcCgoZCwgaSkgPT4gKHsKICAgICAgICBkOiB0aGlzLmFyZWFHZW5lcmF0b3IoZCksCiAgICAgICAgY29sb3I6IHRoaXMuc3Vic2VjdG9yc1tpXS5jb2xvciwKICAgICAgICBpZDogdGhpcy5zdWJzZWN0b3JzW2ldLmtleSwKICAgICAgICBhY3RpdmU6IHRoaXMuc3Vic2VjdG9yc1tpXS5hY3RpdmUsCiAgICAgICAgZGF0YTogZAogICAgICB9KSkKICAgIH0sCiAgICBzdWJzZWN0b3JzRGF0YUFjdGl2ZTogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdGhpcy5zdWJzZWN0b3JzRGF0YS5maWx0ZXIoZCA9PiBkLmFjdGl2ZSA9PT0gdGhpcy5zdGVwKQogICAgfSwKICAgIGFyZWFHZW5lcmF0b3I6IGZ1bmN0aW9uICgpIHsKICAgICAgY29uc3QgeyB4LCB5IH0gPSB0aGlzLnNjYWxlcwogICAgICByZXR1cm4gZDMKICAgICAgICAuYXJlYSgpCiAgICAgICAgLngoZCA9PiB4KGQuZGF0YS5ZZWFyKSkKICAgICAgICAuY3VydmUoZDMuY3VydmVMaW5lYXIpCiAgICAgICAgLnkwKGQgPT4geShkWzBdKSkKICAgICAgICAueTEoZCA9PiB5KGRbMV0pKQogICAgfSwKICAgIGRvdHNQb3NpdGlvbiAoKSB7CiAgICAgIGNvbnN0IHsgeCwgeSB9ID0gdGhpcy5zY2FsZXMKICAgICAgY29uc3QgbmV0T25lID0gWzIwNTAsIDBdCiAgICAgIGNvbnN0IE5ldFR3byA9IFsyMDc1LCAwXQoKICAgICAgcmV0dXJuIHsKICAgICAgICBjeDogeChuZXRPbmVbMF0pLAogICAgICAgIGN5OiB5KG5ldE9uZVsxXSkKICAgICAgfQogICAgfQogIH0sCiAgZGlyZWN0aXZlczogewogICAgYXhpcyAoZWwsIGJpbmRpbmcpIHsKICAgICAgY29uc3QgYXhpcyA9IGJpbmRpbmcuYXJnCiAgICAgIC8vIGNvbnNvbGUubG9nKCJheGlzIiwgYXhpcyk7CiAgICAgIGNvbnN0IGF4aXNNZXRob2QgPSB7IHg6ICdheGlzVG9wJywgeTogJ2F4aXNMZWZ0JyB9W2F4aXNdCiAgICAgIGNvbnN0IHRpY2tGb3JtYXQgPSB7IHg6IGQzLmZvcm1hdCgnZCcpLCB5OiBkMy5mb3JtYXQoJy4ycycpIH1bYXhpc10KICAgICAgY29uc3QgbWV0aG9kQXJnID0gYmluZGluZy52YWx1ZVtheGlzXQoKICAgICAgZDMuc2VsZWN0KGVsKQogICAgICAgIC50cmFuc2l0aW9uKCkKICAgICAgICAuZHVyYXRpb24oMTAwMCkKICAgICAgICAuY2FsbChkM1theGlzTWV0aG9kXShtZXRob2RBcmcpCiAgICAgICAgICAudGlja1NpemUoMCkKICAgICAgICAgIC50aWNrUGFkZGluZygxMCkKICAgICAgICAgIC50aWNrRm9ybWF0KHRpY2tGb3JtYXQpKQogICAgfQogIH0KfQo="},{"version":3,"sources":["EmissionsChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"EmissionsChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"visualization\" id=\"emissions__chart\">\n    <svg class=\"emissions\" width=\"100%\" height=\"100%\">\n      <g :transform=\"'translate(' + margin.left + ',' + margin.top + ')'\">\n        <g\n          class=\"axis\"\n          v-axis:x=\"scales\"\n          :transfrom=\"'translate(' + 0 + ',' + this.innerHeight + ')'\"\n        />\n        <EmissionsDots\n        :step = \"step\"\n        :width=\"this.innerWidth\"\n        :margin=\"margin\"\n        :height=\"this.innerHeight\"\n        :scales=\"scales\"\n        />\n        <g class=\"axis\" v-axis:y=\"scales\" />\n        <g id=\"first_step\" v-if=\"step <= 2\">\n          <path id=\"emissions\" :d=\"linePath\" />\n        </g>\n        <g class=\"applicationsData\" v-if=\"step >= 3\">\n          <path\n            v-for=\"(chunk, i) in applicationsData\"\n            v-bind:key=\"i\"\n            :d=\"chunk.d\"\n            :fill=\"chunk.color\"\n            :id=\"chunk.id\"\n            class=\"emission__chunks\"\n            :class=\"{ inactive: step >= 3.1 }\"\n          />\n        </g>\n        <g class=\"subsectorsData\" v-if=\"step >= 3.1\">\n          <path\n            v-for=\"(chunk, i) in subsectorsData\"\n            v-bind:key=\"i\"\n            :d=\"chunk.d\"\n            :fill=\"chunk.color\"\n            :id=\"chunk.id\"\n            class=\"emission__chunks\"\n            :class=\"{ inactive: chunk.active != step }\"\n          />\n        </g>\n        <dragline\n          v-if=\"step > 3\"\n          :width=\"this.innerWidth\"\n          :margin=\"margin\"\n          :height=\"this.innerHeight\"\n          :scales=\"scales\"\n          :data=\"subsectorsDataActive\"\n        />\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\n// Libraries\nimport * as d3 from 'd3'\n\nimport { group, groups, rollup, rollups } from 'd3-array'\n\n// components\nimport EmissionsDots from './subcomponents/EmissionsDots.vue'\nimport Dragline from './subcomponents/Dragline.vue'\n\n// Data\nimport EmissionData from '../assets/data/emissions-merged.json'\nimport HistoricalEmissions from '../assets/data/emissions_historical.json'\n\n// merge data into one file\n// function merge (){\n//   const merged = emissionsData.map(e => {\n//     console.log(e.Year)\n\n//     return {\n//       ...emissionsData.find(d => d.Year === e.Year),\n//       ...subEmissionsData.find(d => d.Year === e.Year),\n//       ...ApplicationsShare.find(d => d.Year === e.Year)\n//     }\n//   })\n//   console.log(JSON.stringify(merged))\n// }\n// merge()\n\nexport default {\n  name: 'EmissionsChart',\n  components: {\n    EmissionsDots,\n    Dragline\n  },\n  props: {\n    width: {\n      type: Number,\n      required: true\n    },\n    height: {\n      type: Number,\n      required: true\n    },\n    step: {\n      type: Number,\n      default: 0\n    }\n  },\n  data () {\n    return {\n      margin: {\n        left: 250,\n        top: 30,\n        bottom: 30,\n        right: 30\n      }\n    }\n  },\n  watch: {\n    step: function (step) {\n      console.log(step, this.width, this.height)\n    }\n  },\n  computed: {\n    innerWidth () {\n      return this.width - this.margin.left - this.margin.right\n    },\n    innerHeight () {\n      return this.height - this.margin.top - this.margin.bottom\n    },\n    maxYear: function () {\n      return this.step >= 2 ? 2015 : 2080\n    },\n    lineData: function () {\n      // other way of doing it:\n      // const data = HistoricalEmissions.filter(d => d.Year <= this.maxYear)\n      // const reduced = rollups(data, v => d3.sum(v, d => d.Value), d => d.Year)\n      // console.log('lineData', data, reduced)\n      return EmissionData.filter(d => d.Year <= this.maxYear).map(d => [\n        d.Year,\n        d.Emissions\n      ])\n    },\n    linePath () {\n      return d3\n        .line()\n        .x(d => {\n          return this.scales.x(d[0])\n        })\n        .y(d => {\n          return this.scales.y(d[1])\n        })\n        .curve(d3.curveLinear)(this.lineData)\n    },\n    scales () {\n      return {\n        x: d3\n          .scaleLinear()\n          .domain([1990, this.maxYear])\n          .rangeRound([0, this.innerWidth - 200]),\n        y: d3\n          .scaleLinear()\n          .domain([0, 40000000])\n          .rangeRound([this.innerHeight - this.margin.bottom, 0])\n      }\n    },\n    subsectors: function () {\n      return [\n        { key: 'Public', color: '#33121c', active: 3.1 },\n        { key: 'Autoproduced', color: '#33121c', active: 3.1 },\n        { key: 'OtherEn', color: '#611731', active: 3.2 },\n        { key: 'Combustion', color: '#dd5f84', active: 3.3 },\n        { key: 'Production', color: '#dd5f84', active: 3.3 },\n        { key: 'Solvents', color: '#dd5f84', active: 3.3 },\n        { key: 'OtherProc', color: '#dd5f84', active: 3.3 },\n        { key: 'IndWaste', color: '#dd5f84', active: 3.3 },\n        { key: 'Aviation', color: '#ed96ab', active: 3.4 },\n        { key: 'Road', color: '#ed96ab', active: 3.4 },\n        { key: 'Other', color: '#ed96ab', active: 3.4 },\n        { key: 'Shipping', color: '#ed96ab', active: 3.4 },\n        { key: 'CommRes', color: '#f8cbd4', active: 3.5 },\n        { key: 'Agriculture', color: '#f8cbd4', active: 3.5 }\n      ]\n    },\n    applications: function () {\n      return [\n        { key: 'Electricity', color: '#33121c', active: 3.1 },\n        { key: 'OtherEnergy', color: '#611731', active: 3.1 },\n        { key: 'Industry', color: '#dd5f84', active: 3.1 },\n        { key: 'Transports', color: '#ed96ab', active: 3.1 },\n        { key: 'Building', color: '#f8cbd4', active: 3.1 }\n      ]\n    },\n\n    applicationsData: function () {\n      const stacked = d3.stack().keys(this.applications.map(d => d.key))(\n        EmissionData\n      )\n\n      return stacked.map((d, i) => ({\n        d: this.areaGenerator(d),\n        color: this.applications[i].color,\n        id: this.applications[i].key\n      }))\n    },\n    subsectorsData: function () {\n      const stacked = d3.stack().keys(this.subsectors.map(d => d.key))(\n        EmissionData\n      )\n\n      return stacked.map((d, i) => ({\n        d: this.areaGenerator(d),\n        color: this.subsectors[i].color,\n        id: this.subsectors[i].key,\n        active: this.subsectors[i].active,\n        data: d\n      }))\n    },\n    subsectorsDataActive: function () {\n      return this.subsectorsData.filter(d => d.active === this.step)\n    },\n    areaGenerator: function () {\n      const { x, y } = this.scales\n      return d3\n        .area()\n        .x(d => x(d.data.Year))\n        .curve(d3.curveLinear)\n        .y0(d => y(d[0]))\n        .y1(d => y(d[1]))\n    },\n    dotsPosition () {\n      const { x, y } = this.scales\n      const netOne = [2050, 0]\n      const NetTwo = [2075, 0]\n\n      return {\n        cx: x(netOne[0]),\n        cy: y(netOne[1])\n      }\n    }\n  },\n  directives: {\n    axis (el, binding) {\n      const axis = binding.arg\n      // console.log(\"axis\", axis);\n      const axisMethod = { x: 'axisTop', y: 'axisLeft' }[axis]\n      const tickFormat = { x: d3.format('d'), y: d3.format('.2s') }[axis]\n      const methodArg = binding.value[axis]\n\n      d3.select(el)\n        .transition()\n        .duration(1000)\n        .call(d3[axisMethod](methodArg)\n          .tickSize(0)\n          .tickPadding(10)\n          .tickFormat(tickFormat))\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"library/src/style/variables.scss\";\n.visualization {\n  width: inherit;\n  height: inherit;\n}\n\n#emissions {\n  stroke: $color-red;\n  fill: none;\n}\n\n.emission__chunks {\n  stroke: $color-gray;\n}\n\n.subsectorsData {\n  .inactive {\n    display: none;\n  }\n}\n\n.applicationsData {\n  .inactive {\n    fill-opacity: 0.1;\n  }\n}\n\n.tick > text {\n  fill: $color-orange;\n}\n</style>\n"]}]}