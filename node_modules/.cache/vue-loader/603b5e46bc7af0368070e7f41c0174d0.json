{"remainingRequest":"/Users/francescamorini/projects/senses/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/senses/node_modules/library/src/components/IntersectionObserverFracture.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/francescamorini/projects/senses/node_modules/library/src/components/IntersectionObserverFracture.vue","mtime":1575047336601},{"path":"/Users/francescamorini/projects/senses/node_modules/cache-loader/dist/cjs.js","mtime":1575047334698},{"path":"/Users/francescamorini/projects/senses/node_modules/babel-loader/lib/index.js","mtime":1575047334610},{"path":"/Users/francescamorini/projects/senses/node_modules/cache-loader/dist/cjs.js","mtime":1575047334698},{"path":"/Users/francescamorini/projects/senses/node_modules/vue-loader/lib/index.js","mtime":1575047337893}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSW50ZXJzZWN0aW9uT2JzZXJ2ZXJGcmFjdHVyZScsCiAgZG9jczogJ1RoaXMgY29tcG9uZW50IGlzIGRlc2lnbmVkIHRvIGJlIHVzZWQgaW5zaWRlIHRoZSB0ZXh0IHNsb3Qgb2YgdGhlIExheW91dFNjcm9sbHl0ZWxsaW5nIGNvbXBvbmVudC4gV2hpbGUgaXQgaW50ZXJzZWN0cyB3aXRoIHRoZSB0aGUgcmVjdGFuZ2xlIGRlZmluZWQgYXMgcm9vdE1hcmdpbiBpbiBvYnNlcnZlck9wdGlvbnMgaXQgd2lsbCBlbWl0IHRoZSBzY3JvbGwtcHJvZ3Jlc3MgYXMgYSByYW5nZSBiZXR3ZWVuIHRoZSBwcm9wZXJ0eSBzdGVwIGFuZCBzdGVwICsgc3RlcFNpemUuJywKICBwcm9wczogewogICAgc3RlcDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAsCiAgICAgIGRvY3M6ICdMb3dlciBib3VuZCBvZiB0aGUgdmFsdWVzIGVtaXR0ZWQgd2hpbGUgaW50ZXJzZWN0aW5nJwogICAgfSwKICAgIHN0ZXBTaXplOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMSwKICAgICAgZG9jczogJ1NpemUgb2YgdGhlIHN0ZXAuIHN0ZXAgKyBzdGVwU2l6ZSBlcXVhbHMgdGhlIHVwcGVyIGJvdW5kIG9mIHRoZSB2YWx1ZXMgZW1pdHRlZCB3aGlsZSBpbnRlcnNlY3RpbmcnCiAgICB9LAogICAgb2JzZXJ2ZXJPcHRpb25zOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdCAoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHJvb3RNYXJnaW46IGAtJHswLjUgKiAxMDB9JSAwJSAtJHsxMDAgLSAwLjUgKiAxMDB9JSAwJWAKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGRvY3M6ICdPcHRpb25zIHBhc3NlZCB0byB0aGUgaW50ZXJzZWN0aW9uIG9ic2VydmVyLiDihpIgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbl9PYnNlcnZlcl9BUEknCiAgICB9LAogICAgbm9TdHlsaW5nOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICBkb2NzOiAnU2V0dGluZyB0aGlzIHRvIGZhbHNlIGRpc2FibGVzIHRoZSBkZWZhdWx0IHN0eWxpbmcgKGUuZy4sIGJhY2tncm91bmQtY29sb3IsIGJvcmRlciwg4oCmKScKICAgIH0sCiAgICBhbGlnbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdjZW50ZXInLAogICAgICBkb2NzOiBgaG9yaXpvbnRhbGx5IHBvc2l0aW9uIHRoZSBjb250ZW50LCBlaXRoZXIgJ2xlZnQnLCAnY2VudGVyJywgb3IgJ3JpZ2h0Jy4gaGFzIG5vIGVmZmVjdCBpZiBub1N0eWxpbmcgaXMgc2V0IHRvIHRydWUuYAogICAgfQogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBhY3RpdmU6IGZhbHNlCiAgICB9CiAgfSwKICBtb3VudGVkICgpIHsKICAgIHRoaXMuJGVtaXQoJ3N0ZXAnLCAnc3RhcnQnKQogICAgY29uc3QgeyBzdGVwLCAkcmVmcywgb2JzZXJ2ZXJPcHRpb25zIH0gPSB0aGlzCiAgICBjb25zdCBvYnNlcnZlciA9IG5ldyB3aW5kb3cuSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoZW50cmllcyA9PiB7CiAgICAgIGlmIChlbnRyaWVzLmZpbHRlcihlbnRyeSA9PiBlbnRyeS5pc0ludGVyc2VjdGluZykubGVuZ3RoIDwgMSkgewogICAgICAgIHRoaXMuYWN0aXZlID0gZmFsc2UKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICB0aGlzLiRwYXJlbnQuJGVtaXQoJ3N0ZXAnLCBzdGVwKQogICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy53YXRjaCkKICAgICAgdGhpcy5hY3RpdmUgPSB0cnVlCiAgICB9LCBvYnNlcnZlck9wdGlvbnMpCgogICAgb2JzZXJ2ZXIub2JzZXJ2ZSgkcmVmcy5pbnRlcnNlY3QpCiAgfSwKICBtZXRob2RzOiB7CiAgICB3YXRjaCAoKSB7CiAgICAgIGNvbnN0IHsgYWN0aXZlLCAkcmVmcywgc3RlcCwgc3RlcFNpemUgfSA9IHRoaXMKICAgICAgY29uc3QgcmVjdCA9ICRyZWZzLmludGVyc2VjdC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKQogICAgICBjb25zdCBvZmZzZXQgPSBpbm5lckhlaWdodCAqIDAuNQogICAgICBjb25zdCBzY3JvbGwgPSBNYXRoLm1heChNYXRoLm1pbigob2Zmc2V0IC0gcmVjdC50b3ApIC8gcmVjdC5oZWlnaHQsIDEpLCAwKQogICAgICB0aGlzLiRwYXJlbnQuJGVtaXQoJ3N0ZXAnLCBzdGVwICsgc2Nyb2xsICogc3RlcFNpemUpCiAgICAgIGlmIChhY3RpdmUpIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLndhdGNoKQogICAgfQogIH0KfQo="},{"version":3,"sources":["IntersectionObserverFracture.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IntersectionObserverFracture.vue","sourceRoot":"node_modules/library/src/components","sourcesContent":["<template>\n  <div class=\"intersection-observer intersection-observer-fracture\" ref=\"intersect\" :class=\"{ default: !noStyling }\">\n    <div :class=\"[{ default: !noStyling, active }, align]\">\n      <slot>\n        <h2>Step {{ step }} – {{ step + stepSize }}</h2>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'IntersectionObserverFracture',\n  docs: 'This component is designed to be used inside the text slot of the LayoutScrollytelling component. While it intersects with the the rectangle defined as rootMargin in observerOptions it will emit the scroll-progress as a range between the property step and step + stepSize.',\n  props: {\n    step: {\n      type: Number,\n      default: 0,\n      docs: 'Lower bound of the values emitted while intersecting'\n    },\n    stepSize: {\n      type: Number,\n      default: 1,\n      docs: 'Size of the step. step + stepSize equals the upper bound of the values emitted while intersecting'\n    },\n    observerOptions: {\n      type: Object,\n      default () {\n        return {\n          rootMargin: `-${0.5 * 100}% 0% -${100 - 0.5 * 100}% 0%`\n        }\n      },\n      docs: 'Options passed to the intersection observer. → https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API'\n    },\n    noStyling: {\n      type: Boolean,\n      default: false,\n      docs: 'Setting this to false disables the default styling (e.g., background-color, border, …)'\n    },\n    align: {\n      type: String,\n      default: 'center',\n      docs: `horizontally position the content, either 'left', 'center', or 'right'. has no effect if noStyling is set to true.`\n    }\n  },\n  data () {\n    return {\n      active: false\n    }\n  },\n  mounted () {\n    this.$emit('step', 'start')\n    const { step, $refs, observerOptions } = this\n    const observer = new window.IntersectionObserver(entries => {\n      if (entries.filter(entry => entry.isIntersecting).length < 1) {\n        this.active = false\n        return\n      }\n      this.$parent.$emit('step', step)\n      requestAnimationFrame(this.watch)\n      this.active = true\n    }, observerOptions)\n\n    observer.observe($refs.intersect)\n  },\n  methods: {\n    watch () {\n      const { active, $refs, step, stepSize } = this\n      const rect = $refs.intersect.getBoundingClientRect()\n      const offset = innerHeight * 0.5\n      const scroll = Math.max(Math.min((offset - rect.top) / rect.height, 1), 0)\n      this.$parent.$emit('step', step + scroll * stepSize)\n      if (active) requestAnimationFrame(this.watch)\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../style/global.scss\";\n\n.intersection-observer {\n  display: flex;\n  flex-direction: column;\n  .default {\n    pointer-events: all;\n    hyphens: auto;\n    max-width: 460px;\n    background: transparentize($color-white, 0.02);\n    padding: $spacing / 2;\n\n    @supports ((-webkit-backdrop-filter: saturate(180%) blur(20px)) or(backdrop-filter: saturate(180%) blur(20px))) {\n      background: transparentize($color-white, 0.15);\n      -webkit-backdrop-filter: saturate(180%) blur(10px);\n      backdrop-filter:saturate(180%) blur(10px)\n    }\n\n    &.left {\n      align-self: flex-start;\n    }\n\n    &.center {\n      align-self: center;\n    }\n\n    &.right {\n      align-self: flex-end;\n    }\n  }\n\n  // &.default {\n  //   padding: 80vh 0 50vh;\n  // }\n  // + .default {\n  //   padding: 30vh 0 50vh;\n  // }\n}\n</style>\n"]}]}