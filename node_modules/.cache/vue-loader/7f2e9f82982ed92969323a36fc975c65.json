{"remainingRequest":"/Users/francescamorini/projects/senses/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/senses/node_modules/library/src/components/SensesSelect.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/Users/francescamorini/projects/senses/node_modules/library/src/components/SensesSelect.vue","mtime":1575047514660},{"path":"/Users/francescamorini/projects/senses/node_modules/css-loader/dist/cjs.js","mtime":1575047513267},{"path":"/Users/francescamorini/projects/senses/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1575047516506},{"path":"/Users/francescamorini/projects/senses/node_modules/postcss-loader/src/index.js","mtime":1575047515169},{"path":"/Users/francescamorini/projects/senses/node_modules/sass-loader/dist/cjs.js","mtime":1575047516128},{"path":"/Users/francescamorini/projects/senses/node_modules/cache-loader/dist/cjs.js","mtime":1575047512487},{"path":"/Users/francescamorini/projects/senses/node_modules/vue-loader/lib/index.js","mtime":1575047516506}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuLi9zdHlsZS9nbG9iYWwuc2NzcyI7Cgouc2Vuc2VzLXRvb2x0aXAtc2VsZWN0IHsKICBib3gtc2hhZG93OiAxcHggMXB4IDNweCByZ2JhKCRjb2xvci13aGl0ZSwgMSk7CiAgb3V0bGluZTogbm9uZTsKICAuc2Vuc2VzLXNlbGVjdC1saXN0IHsKICAgIGxpc3Qtc3R5bGU6IG5vbmU7CiAgfQp9Cgo="},{"version":3,"sources":["SensesSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SensesSelect.vue","sourceRoot":"node_modules/library/src/components","sourcesContent":["<template>\n  <v-popover\n    class=\"senses-select\"\n    offset=\"2\"\n    trigger=\"click\"\n    :popoverClass=\"['senses-tooltip senses-tooltip-select']\"\n    :placement=\"placement\"\n    @show=\"isVisible = true\"\n    @hide=\"isVisible = false\">\n    <button\n      class=\"highlight\"\n      aria-haspopup=\"listbox\"\n      :aria-expanded=\"isVisible\"\n      :aria-labelledby=\"`btn_${uniqID}`\"\n      :id=\"`btn_${uniqID}`\"\n      :style=\"{'min-width': isNaN(width) ? width : `${width}px`}\">\n      <span><slot>{{ label }}</slot></span><svg width=\"16\" height=\"8\"><g><path d=\"M-4,1.5 L0,-1.5 L4,1.5\"/></g></svg>\n    </button>\n    <slot name=\"tooltip\" slot=\"popover\">\n      <ul\n        :style=\"{'min-width': isNaN(width) ? width : `${width}px`}\"\n        role=\"listbox\"\n        class=\"senses-select-list\"\n        :aria-labelledby=\"`btn_${uniqID}`\"\n        :aria-activedescendant=\"`option_${value}`\">\n        <li\n          v-for=\"(o, i) in options\"\n          :key=\"i\"\n          role=\"option\"\n          v-close-popover\n          :id=\"`option_${(o.value != null ? o.value : o)}`\"\n          :aria-selected=\"(o.value != null ? o.value : o) === value\"\n          class=\"option\"\n          :class=\"[{active: (o.value != null ? o.value : o) === value, focused: (o.value != null ? o.value : o) === value}]\"\n          @click=\"$emit('input', o.value != null ? o.value : o)\">\n          {{ o.label || (o.value != null ? o.value : o) }}\n        </li>\n      </ul>\n    </slot>\n  </v-popover>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport { VPopover, VClosePopover } from 'v-tooltip'\nVue.directive('close-popover', VClosePopover)\nexport default {\n  name: 'SensesSelect',\n  components: {\n    VPopover\n  },\n  props: {\n    value: {\n      default: 1,\n      docs: 'To be used with v-model'\n    },\n    options: {\n      type: Array,\n      default () {\n        return [{\n          label: 'Option 1',\n          value: 1\n        }, {\n          value: 'Option 2'\n        },\n        'Option 3']\n      },\n      docs: 'Array of available options. Options can be either strings or objects, with properties value (required) and label (optional)'\n    },\n    width: {\n      type: String,\n      default: null,\n      docs: 'width of the dropdown menu either in pixels or css style. defaults to null: no fixed width'\n    },\n    placement: {\n      type: String,\n      default: 'bottom-start',\n      docs: 'placement of tooltip, defualts to \"bottom-start\"'\n    }\n  },\n  data () {\n    return {\n      isVisible: false,\n      uniqID: '_' + Math.random().toString(36).substr(2, 9)\n    }\n  },\n  computed: {\n    label () {\n      const { options, value } = this\n      const selected = options.find(o => (o.value != null ? o.value : o) === value)\n      if (selected == null) return 'Choose Option'\n      return selected.label || (selected.value != null ? selected.value : selected)\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../style/global.scss\";\n.senses-select {\n  display: inline-block;\n  .highlight {\n    border: none;\n    display: inline-flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: $spacing / 6;\n    padding-right: $spacing / 4;\n    svg {\n      g {\n        transform: translate(11px, 4px);\n        path {\n          stroke: getColor(neon, 40);\n          stroke-width: 1.5;\n          fill: none;\n          transition: transform $transition;\n          transform: rotate(180deg);\n        }\n      }\n    }\n    &:hover {\n      path {\n        stroke: getColor(neon, 20);\n      }\n    }\n  }\n  &.open {\n    .highlight {\n      svg {\n        g {\n          path {\n            transform: rotate(0deg);\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"../style/global.scss\";\n\n.senses-tooltip-select {\n  box-shadow: 1px 1px 3px rgba($color-white, 1);\n  outline: none;\n  .senses-select-list {\n    list-style: none;\n  }\n}\n\n</style>\n"]}]}