{"remainingRequest":"/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/transition-module/src/components/subcomponents/Dragline.vue?vue&type=style&index=0&id=2282cd1e&scoped=true&lang=scss&","dependencies":[{"path":"/Users/francescamorini/projects/transition-module/src/components/subcomponents/Dragline.vue","mtime":1572538415326},{"path":"/Users/francescamorini/projects/transition-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRyYWdsaW5lUmVjdCB7CiAgZmlsbDogbm9uZTsKICBwb2ludGVyLWV2ZW50czogYWxsOwp9Cg=="},{"version":3,"sources":["Dragline.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA","file":"Dragline.vue","sourceRoot":"src/components/subcomponents","sourcesContent":["<template>\n  <g class=\"dragline\">\n    <line :x1=\"x\" y1=\"0\" :x2=\"x\" :y2=\"height\" stroke=\"#000\" />\n    <rect x=\"0\" y=\"0\" :width=\"width\" :height=\"height\" class=\"draglineRect\" @click=\"clickDragline\" />\n  </g>\n</template>\n\n<script>\nexport default {\n  name: 'Dragline',\n  props: ['width', 'height', 'scale', 'data', 'margin'],\n  data () {\n    return {\n      x: 10,\n      time: null\n    }\n  },\n  methods: {\n    clickDragline: function (e) {\n      console.log(e)\n      const x = e.layerX - this.margin.left\n      this.x = x\n      this.time = this.scale.x.invert(x)\n      console.log(this.data)\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n  .draglineRect {\n    fill: none;\n    pointer-events: all;\n  }\n</style>\n"]}]}