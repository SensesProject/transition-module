{"remainingRequest":"/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/transition-module/node_modules/library/src/components/IntersectionObserver.vue?vue&type=style&index=0&id=ba48f47c&scoped=true&lang=scss&","dependencies":[{"path":"/Users/francescamorini/projects/transition-module/node_modules/library/src/components/IntersectionObserver.vue","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uL3N0eWxlL2dsb2JhbC5zY3NzIjsKCi5pbnRlcnNlY3Rpb24tb2JzZXJ2ZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAuZGVmYXVsdCB7CiAgICBoeXBoZW5zOiBhdXRvOwogICAgbWF4LXdpZHRoOiA0NjBweDsKICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50aXplKCRjb2xvci13aGl0ZSwgMC4wMik7CiAgICBwYWRkaW5nOiAkc3BhY2luZyAvIDI7CgogICAgQHN1cHBvcnRzICgoLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI6IHNhdHVyYXRlKDE4MCUpIGJsdXIoMjBweCkpIG9yKGJhY2tkcm9wLWZpbHRlcjogc2F0dXJhdGUoMTgwJSkgYmx1cigyMHB4KSkpIHsKICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnRpemUoJGNvbG9yLXdoaXRlLCAwLjE1KTsKICAgICAgLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI6IHNhdHVyYXRlKDE4MCUpIGJsdXIoMTBweCk7CiAgICAgIGJhY2tkcm9wLWZpbHRlcjpzYXR1cmF0ZSgxODAlKSBibHVyKDEwcHgpCiAgICB9CgogICAgJi5sZWZ0IHsKICAgICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDsKICAgIH0KCiAgICAmLmNlbnRlciB7CiAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjsKICAgIH0KCiAgICAmLnJpZ2h0IHsKICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7CiAgICB9CiAgfQoKICAmLmRlZmF1bHQgewogICAgcGFkZGluZzogODB2aCAwIDUwdmg7CiAgfQogICsgLmRlZmF1bHQgewogICAgcGFkZGluZzogMzB2aCAwIDUwdmg7CiAgfQp9Cg=="},{"version":3,"sources":["IntersectionObserver.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IntersectionObserver.vue","sourceRoot":"node_modules/library/src/components","sourcesContent":["<template>\n  <div class=\"intersection-observer\" ref=\"intersect\" :class=\"{ default: !noStyling }\">\n    <div :class=\"[{ default: !noStyling }, align]\">\n      <slot/>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'IntersectionObserver',\n  docs: 'This component only works within LayoutScrollytelling.vue<br>It is used to commit its property <code>step</code> to vuex <code>scrollytelling/step</code> when it becomes visible.',\n  props: {\n    step: Number,\n    offset: {\n      type: Number,\n      default: 0.5\n    },\n    observerOptions: {\n      type: Object,\n      default () {\n        return {\n          rootMargin: `-${0.5 * 100}% 0% -${100 - 0.5 * 100}% 0%`\n        }\n      }\n    },\n    noStyling: {\n      type: Boolean,\n      default: false,\n      docs: 'Setting this to false disables the default styling (e.g., background-color, border, â€¦)'\n    },\n    align: {\n      type: String,\n      default: 'center',\n      docs: `horizontally position the content, either 'left', 'center', or 'right'. has no effect if noStyling is set to true.`\n    }\n  },\n  data () {\n    return {\n    }\n  },\n  mounted () {\n    this.$emit('step', 'start')\n    const { step, $refs, observerOptions } = this\n    const observer = new window.IntersectionObserver(entries => {\n      if (entries.filter(entry => entry.isIntersecting).length < 1) return\n      this.$parent.$emit('step', step)\n    }, observerOptions)\n\n    observer.observe($refs.intersect)\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../style/global.scss\";\n\n.intersection-observer {\n  display: flex;\n  flex-direction: column;\n  .default {\n    hyphens: auto;\n    max-width: 460px;\n    background: transparentize($color-white, 0.02);\n    padding: $spacing / 2;\n\n    @supports ((-webkit-backdrop-filter: saturate(180%) blur(20px)) or(backdrop-filter: saturate(180%) blur(20px))) {\n      background: transparentize($color-white, 0.15);\n      -webkit-backdrop-filter: saturate(180%) blur(10px);\n      backdrop-filter:saturate(180%) blur(10px)\n    }\n\n    &.left {\n      align-self: flex-start;\n    }\n\n    &.center {\n      align-self: center;\n    }\n\n    &.right {\n      align-self: flex-end;\n    }\n  }\n\n  &.default {\n    padding: 80vh 0 50vh;\n  }\n  + .default {\n    padding: 30vh 0 50vh;\n  }\n}\n</style>\n"]}]}