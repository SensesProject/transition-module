{"remainingRequest":"/Users/francescamorini/projects/transition-module/node_modules/babel-loader/lib/index.js!/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/transition-module/src/components/chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/francescamorini/projects/transition-module/src/components/chart.vue","mtime":1572536223167},{"path":"/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZXZlcnkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2ZyYW5jZXNjYW1vcmluaS9wcm9qZWN0cy90cmFuc2l0aW9uLW1vZHVsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IEF4aXMgZnJvbSAiLi9heGlzLnZ1ZSI7CmltcG9ydCBkb3R0ZWRsaW5lIGZyb20gIi4vZG90dGVkbGluZXMudnVlIjsKaW1wb3J0IExhYmVsc0xpbmVjaGFydCBmcm9tICIuL0xhYmVsc0xpbmVjaGFydC52dWUiOwppbXBvcnQgR29hbEFubm90YXRpb25zIGZyb20gIi4vTGluZWNoYXJ0R29hbEFubm90YXRpb25zLnZ1ZSI7CmltcG9ydCBQb3BVcExhYmVsIGZyb20gIi4vTGluZWNoYXJ0UG9wVXAudnVlIjsKaW1wb3J0IGNoYXJ0YW5pbWF0ZWQgZnJvbSAiLi9jaGFydGFuaW1hdGVkLnZ1ZSI7CmltcG9ydCBlbWlzc2lvbnNEYXRhIGZyb20gIi4uL2Fzc2V0cy9lbWlzc2lvbnMuanNvbiI7CmltcG9ydCBzZWN0b3JzIGZyb20gIi4uL2Fzc2V0cy9lbWlzc2lvbnMtc3RhY2tlZC5qc29uIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdjaGFydCcsCiAgcHJvcHM6IHsKICAgIGxhYmVsOiBTdHJpbmcKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEF4aXM6IEF4aXMsCiAgICBEb3R0ZWQ6IGRvdHRlZGxpbmUsCiAgICBMYWJlbHNMaW5lY2hhcnQ6IExhYmVsc0xpbmVjaGFydCwKICAgIGNoYXJ0YW5pbWF0ZWQ6IGNoYXJ0YW5pbWF0ZWQsCiAgICBHb2FsQW5ub3RhdGlvbnM6IEdvYWxBbm5vdGF0aW9ucywKICAgIFBvcFVwTGFiZWw6IFBvcFVwTGFiZWwKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlbWlzc2lvbnM6IGVtaXNzaW9uc0RhdGEsCiAgICAgIHNlY3RvcnM6IHNlY3RvcnMsCiAgICAgIGNoYXJ0RGVmYXVsdHM6IHsKICAgICAgICB3aWR0aDogMTAwMCwKICAgICAgICBoZWlnaHQ6IDQwMCwKICAgICAgICBjaGFydElkOiAnbGluZWNoYXJ0LXZ1ZScsCiAgICAgICAgdGl0bGU6ICdFbWlzc2lvbnMnLAogICAgICAgIG1hcmdpbjogewogICAgICAgICAgdG9wOiA1LAogICAgICAgICAgcmlnaHQ6IDUwLAogICAgICAgICAgYm90dG9tOiAyNSwKICAgICAgICAgIGxlZnQ6IDAKICAgICAgICB9LAogICAgICAgIGRhdGE6IFtdCiAgICAgIH0sCiAgICAgIGxpbmU6ICcnLAogICAgICB0cmFuc2xhdGU6IHRoaXMuZ2V0VHJhbnNsYXRpb24sCiAgICAgIHRyYW5zbGF0ZUxpbmU6ICd0cmFuc2xhdGUoMCwwKScsCiAgICAgIHRybnNZOiAndHJhbnNsYXRlKDAsMCknLAogICAgICB0cm5zWDogdGhpcy5nZXRUcm5zeCwKICAgICAgdG9nZ2xlQ2xhc3M6IHRydWUsCiAgICAgIGNoYXJ0V2lkdGg6IHRoaXMuZ2V0V2lkdGgKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5jYWxjdWxhdGVQYXRoKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRTY2FsZTogZnVuY3Rpb24gZ2V0U2NhbGUoKSB7CiAgICAgIHZhciBwYXJzZURhdGUgPSBkMy50aW1lUGFyc2UoJyVZJyk7CiAgICAgIHRoaXMuZW1pc3Npb25zLmZvckVhY2goZnVuY3Rpb24gKGQpIHsKICAgICAgICBkLmRhdGUgPSBwYXJzZURhdGUoZC5ZZWFyKTsKICAgICAgfSk7CiAgICAgIHZhciB4ID0gZDMuc2NhbGVUaW1lKCkuZG9tYWluKFtkMy5taW4odGhpcy5lbWlzc2lvbnMsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuZGF0ZTsKICAgICAgfSksIHBhcnNlRGF0ZSgyMTAwKV0pLnJhbmdlUm91bmQoWzAsIHRoaXMuY2hhcnREZWZhdWx0cy53aWR0aCAtIDEwMF0pOwogICAgICB2YXIgeSA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFswLCA0MDAwMDAwMF0pLnJhbmdlKFt0aGlzLmNoYXJ0RGVmYXVsdHMuaGVpZ2h0LCAwXSk7CiAgICAgIGQzLmF4aXNCb3R0b20oKS5zY2FsZSh4KTsKICAgICAgZDMuYXhpc0xlZnQoKS5zY2FsZSh5KTsKICAgICAgdmFyIHhBeGlzID0gZDMuYXhpc0JvdHRvbSgpLnNjYWxlKHgpLnRpY2tTaXplKDApLnRpY2tQYWRkaW5nKDEwKS50aWNrRm9ybWF0KGQzLnRpbWVGb3JtYXQoJyVZJykpLnRpY2tzKGQzLnRpbWVZZWFyLmV2ZXJ5KDEwKSk7IC8vICAgICAgICAuc3BsaWNlKDEpCgogICAgICB2YXIgeUF4aXMgPSBkMy5heGlzTGVmdCgpLnNjYWxlKHkpLnRpY2tWYWx1ZXMoW2QzLm1heCh0aGlzLmVtaXNzaW9ucywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5FbWlzc2lvbnM7CiAgICAgIH0pLCA0MDAwMDAwMF0pOwogICAgICByZXR1cm4gewogICAgICAgIHg6IHgsCiAgICAgICAgeTogeSwKICAgICAgICB4QXhpczogeEF4aXMsCiAgICAgICAgeUF4aXM6IHlBeGlzCiAgICAgIH07CiAgICB9LAogICAgbmV3U2NhbGU6IGZ1bmN0aW9uIG5ld1NjYWxlKCkgewogICAgICB2YXIgcGFyc2VEYXRlID0gZDMudGltZVBhcnNlKCclWScpOwogICAgICB0aGlzLmVtaXNzaW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgZC5kYXRlID0gcGFyc2VEYXRlKGQuWWVhcik7CiAgICAgIH0pOwogICAgICB2YXIgeCA9IGQzLnNjYWxlVGltZSgpLmRvbWFpbihbZDMubWluKHRoaXMuZW1pc3Npb25zLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmRhdGU7CiAgICAgIH0pLCBkMy5tYXgodGhpcy5lbWlzc2lvbnMsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuZGF0ZTsKICAgICAgfSldKS5yYW5nZVJvdW5kKFswLCB0aGlzLmNoYXJ0RGVmYXVsdHMud2lkdGhdKTsKICAgICAgdmFyIHkgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgNDAwMDAwMDBdKS5yYW5nZShbdGhpcy5jaGFydERlZmF1bHRzLmhlaWdodCwgLTEwMF0pOwogICAgICBkMy5heGlzQm90dG9tKCkuc2NhbGUoeCk7CiAgICAgIGQzLmF4aXNMZWZ0KCkuc2NhbGUoeSk7CiAgICAgIHZhciB4QXhpcyA9IGQzLmF4aXNUb3AoKS5zY2FsZSh4KS50aWNrRm9ybWF0KGQzLnRpbWVGb3JtYXQoJyVZJykpLnRpY2tzKGQzLnRpbWVZZWFyLmV2ZXJ5KDUpKTsKICAgICAgdmFyIHlBeGlzID0gZDMuYXhpc1JpZ2h0KCkuc2NhbGUoeSkudGlja1ZhbHVlcyhbMTAwMDAwMDAsIDIwMDAwMDAwLCAzMDAwMDAwMCwgNDAwMDAwMDBdKS50aWNrU2l6ZSg4MzApLnRpY2tQYWRkaW5nKDYpOwogICAgICByZXR1cm4gewogICAgICAgIHg6IHgsCiAgICAgICAgeTogeSwKICAgICAgICB4QXhpczogeEF4aXMsCiAgICAgICAgeUF4aXM6IHlBeGlzCiAgICAgIH07CiAgICB9LAogICAgZ2V0VHJuc3g6IGZ1bmN0aW9uIGdldFRybnN4KGNoYXJ0RGVmYXVsdHMpIHsKICAgICAgdmFyIHQgPSAndHJhbnNsYXRlKDAsJyArIHRoaXMuY2hhcnREZWZhdWx0cy5oZWlnaHQgKyAnKSc7CiAgICAgIHJldHVybiB0OwogICAgfSwKICAgIGdldFRyYW5zbGF0aW9uOiBmdW5jdGlvbiBnZXRUcmFuc2xhdGlvbihjaGFydERlZmF1bHRzKSB7CiAgICAgIHZhciB0ciA9ICd0cmFuc2xhdGUoJyArIDEwMCArICcsJyArIDIwMCArICcpJzsKCiAgICAgIGlmICh0aGlzLnN0ZXAgPT09IDQpIHsKICAgICAgICB0ciA9ICd0cmFuc2xhdGUoJyArIC0zMCArICcsJyArIDI4MCArICcpJzsKICAgICAgfQoKICAgICAgcmV0dXJuIHRyOwogICAgfSwKICAgIGdldFdpZHRoOiBmdW5jdGlvbiBnZXRXaWR0aChjaGFydERlZmF1bHRzKSB7CiAgICAgIHZhciB3aWR0aCA9ICc5MCUnOwoKICAgICAgaWYgKHRoaXMuc3RlcCA9PT0gNCkgewogICAgICAgIHdpZHRoID0gJzEwMCUnOwogICAgICB9CgogICAgICByZXR1cm4gd2lkdGg7CiAgICB9LAogICAgY2FsY3VsYXRlUGF0aDogZnVuY3Rpb24gY2FsY3VsYXRlUGF0aCgpIHsKICAgICAgdmFyIHNjYWxlID0gdGhpcy5nZXRTY2FsZSgpOwogICAgICB2YXIgcGF0aCA9IGQzLmxpbmUoKS54KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHNjYWxlLngoZC5kYXRlKTsKICAgICAgfSkueShmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBzY2FsZS55KGQuRW1pc3Npb25zKTsKICAgICAgfSkuY3VydmUoZDMuY3VydmVDYXRtdWxsUm9tKTsKICAgICAgdGhpcy5saW5lID0gcGF0aCh0aGlzLmVtaXNzaW9ucyk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoewogICAgc3RlcDogZnVuY3Rpb24gc3RlcChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2Nyb2xseXRlbGxpbmcgPyBzdGF0ZS5zY3JvbGx5dGVsbGluZy5zdGVwIDogbnVsbDsKICAgIH0KICB9KSwgewogICAgaXRlbXM6IGZ1bmN0aW9uIGl0ZW1zKCkgewogICAgICB2YXIgYXJlYXMgPSBbJ1RyYW5zcG9ydHMnLCAnSW5kdXN0cnknLCAnQnVpbGRpbmcnLCAnRWxlY3RyaWNpdHknLCAnT3RoZXJFbmVyZ3knXTsKICAgICAgdmFyIHNjYWxlID0gdGhpcy5nZXRTY2FsZSgpOwoKICAgICAgaWYgKHRoaXMuc3RlcCA9PT0gNCkgewogICAgICAgIHNjYWxlID0gdGhpcy5uZXdTY2FsZSgpOwogICAgICB9CgogICAgICB2YXIgcGFyc2VEYXRlID0gZDMudGltZVBhcnNlKCclWScpOwogICAgICB2YXIgZGF0YSA9IHRoaXMuc2VjdG9yczsKICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgZC5kYXRlID0gcGFyc2VEYXRlKGQuWWVhcik7CiAgICAgIH0pOwogICAgICB2YXIgYXJlYUZpeGVkID0gZDMuYXJlYSgpLngoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gc2NhbGUueChkLmRhdGUpOwogICAgICB9KS5jdXJ2ZShkMy5jdXJ2ZUNhdG11bGxSb20pOwogICAgICB2YXIgbmV3QXJlYXMgPSBhcmVhcy5tYXAoZnVuY3Rpb24gKGl0ZW0sIGkpIHsKICAgICAgICBhcmVhRml4ZWQueTAoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHZhciBzdW0gPSAwOwoKICAgICAgICAgIGZvciAodmFyIG4gPSAwOyBuIDwgaTsgbisrKSB7CiAgICAgICAgICAgIHN1bSA9IHN1bSArIGRbYXJlYXNbbl1dOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBzY2FsZS55KHN1bSk7CiAgICAgICAgfSkueTEoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHZhciBzdW0gPSAwOwoKICAgICAgICAgIGZvciAodmFyIG4gPSAwOyBuIDw9IGk7IG4rKykgewogICAgICAgICAgICBzdW0gPSBzdW0gKyBkW2FyZWFzW25dXTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gc2NhbGUueShzdW0pOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiB7CiAgICAgICAgICBkOiBhcmVhRml4ZWQoZGF0YSksCiAgICAgICAgICBpZDogYXJlYXNbaV0KICAgICAgICB9OwogICAgICB9KTsKICAgICAgcmV0dXJuIG5ld0FyZWFzOwogICAgfQogIH0pCn07"},{"version":3,"sources":["chart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n  <svg v-bind:width='chartWidth()' height='90%' viewBox='-30 0 900 1000'>\n    <g class='lineChart' v-bind:transform='translate()'>\n    <g class='stacked-emissions' v-if=\"step >=3 && step <=4\">\n        <path class=\"area\" v-for=\"(item, i) in items\" v-bind:key='i' :d='item.d' :id='item.id'/>\n    </g>\n      <g id=\"one-line-chart\" v-if=\"step <=3\">\n        <path class='line' :d='line'/>\n        <Axis class='yA' v-bind:scales='getScale().yAxis' v-bind:chartDefaults='chartDefaults' v-bind:data='emissions' v-bind:trns='trnsY'/>\n        <Axis class='xA' v-bind:scales='getScale().xAxis' v-bind:chartDefaults='chartDefaults' v-bind:data='emissions' v-bind:trns='trnsX()'/>\n        <Dotted class='lineDotted' :x1='0' :y1='43' :x2='215' :y2='43'/>\n        <Dotted class='lineDotted' :x1='215' :y1='43' :x2='618' :y2='400'/>\n        <Dotted class='lineDotted' :x1='215' :y1='43' :x2='435' :y2='400'/>\n        <GoalAnnotations/>\n        <PopUpLabel :transform='\"translate(310, 200)\"' goal='1.5°' v-if=\"step <=2\"/>\n        <PopUpLabel :transform='\"translate(430, 220)\"'goal='2.0°' v-if=\"step <=2\"/>\n      </g>\n      <g class='labels-sector' v-if=\"step ==3\"><LabelsLinechart/></g>\n    </g>\n  <chartanimated class='subsector-stacked' v-if=\"step >=3 && step <=4\"/>\n  </svg>\n  <!-- <p>{{step}}</p> -->\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport { mapState } from 'vuex'\nimport Axis from './axis.vue'\nimport dottedline from './dottedlines.vue'\nimport LabelsLinechart from './LabelsLinechart.vue'\nimport GoalAnnotations from './LinechartGoalAnnotations.vue'\nimport PopUpLabel from './LinechartPopUp.vue'\nimport chartanimated from './chartanimated.vue'\n\nimport emissionsData from '../assets/emissions.json'\nimport sectors from '../assets/emissions-stacked.json'\n\nexport default {\n  name: 'chart',\n  props: {\n    label: String\n  },\n  components: {\n    Axis,\n    Dotted: dottedline,\n    LabelsLinechart,\n    chartanimated,\n    GoalAnnotations,\n    PopUpLabel\n  },\n  data () {\n    return {\n      emissions: emissionsData,\n      sectors: sectors,\n      chartDefaults: {\n        width: 1000,\n        height: 400,\n        chartId: 'linechart-vue',\n        title: 'Emissions',\n        margin: {\n          top: 5,\n          right: 50,\n          bottom: 25,\n          left: 0\n        },\n        data: []\n      },\n      line: '',\n      translate: this.getTranslation,\n      translateLine: 'translate(0,0)',\n      trnsY: 'translate(0,0)',\n      trnsX: this.getTrnsx,\n      toggleClass: true,\n      chartWidth: this.getWidth\n    }\n  },\n  mounted () {\n    this.calculatePath()\n  },\n  methods: {\n    getScale () {\n      var parseDate = d3.timeParse('%Y')\n      this.emissions.forEach(function (d) {\n        d.date = parseDate(d.Year)\n      })\n      var x = d3\n        .scaleTime()\n        .domain([d3.min(this.emissions, d => d.date), parseDate(2100)])\n        .rangeRound([0, this.chartDefaults.width - 100])\n\n      var y = d3\n        .scaleLinear()\n        .domain([0, 40000000])\n        .range([this.chartDefaults.height, 0])\n\n      d3.axisBottom().scale(x)\n      d3.axisLeft().scale(y)\n\n      var xAxis = d3\n        .axisBottom()\n        .scale(x)\n        .tickSize(0)\n        .tickPadding(10)\n        .tickFormat(d3.timeFormat('%Y'))\n        .ticks(d3.timeYear.every(10))\n      //        .splice(1)\n\n      var yAxis = d3\n        .axisLeft()\n        .scale(y)\n        .tickValues([d3.max(this.emissions, d => d.Emissions), 40000000])\n\n      return {\n        x,\n        y,\n        xAxis,\n        yAxis\n      }\n    },\n    newScale () {\n      var parseDate = d3.timeParse('%Y')\n      this.emissions.forEach(function (d) {\n        d.date = parseDate(d.Year)\n      })\n      var x = d3\n        .scaleTime()\n        .domain([d3.min(this.emissions, d => d.date), d3.max(this.emissions, d => d.date)])\n        .rangeRound([0, this.chartDefaults.width])\n\n      var y = d3\n        .scaleLinear()\n        .domain([0, 40000000])\n        .range([this.chartDefaults.height, -100])\n\n      d3.axisBottom().scale(x)\n      d3.axisLeft().scale(y)\n\n      var xAxis = d3\n        .axisTop()\n        .scale(x)\n        .tickFormat(d3.timeFormat('%Y'))\n        .ticks(d3.timeYear.every(5))\n\n      var yAxis = d3\n        .axisRight()\n        .scale(y)\n        .tickValues([10000000, 20000000, 30000000, 40000000])\n        .tickSize(830)\n        .tickPadding(6)\n\n      return {\n        x,\n        y,\n        xAxis,\n        yAxis\n      }\n    },\n    getTrnsx (chartDefaults) {\n      const t = 'translate(0,' + this.chartDefaults.height + ')'\n      return t\n    },\n    getTranslation (chartDefaults) {\n      var tr = 'translate(' + 100 + ',' + 200 + ')'\n      if (this.step === 4) {\n        tr = 'translate(' + -30 + ',' + 280 + ')'\n      }\n      return tr\n    },\n    getWidth (chartDefaults) {\n      var width = '90%'\n      if (this.step === 4) {\n        width = '100%'\n      }\n      return width\n    },\n    calculatePath () {\n      const scale = this.getScale()\n\n      const path = d3\n        .line()\n        .x(d => { return scale.x(d.date) })\n        .y(d => { return scale.y(d.Emissions) })\n        .curve(d3.curveCatmullRom)\n\n      this.line = path(this.emissions)\n    }\n  },\n  computed: {\n    ...mapState({\n      step: state => state.scrollytelling ? state.scrollytelling.step : null\n    }),\n    items () {\n      const areas = ['Transports', 'Industry', 'Building', 'Electricity', 'OtherEnergy']\n      var scale = this.getScale()\n      if (this.step === 4) {\n        scale = this.newScale()\n      }\n\n      const parseDate = d3.timeParse('%Y')\n      const data = this.sectors\n\n      data.forEach(function (d) {\n        d.date = parseDate(d.Year)\n      })\n\n      var areaFixed = d3\n        .area()\n        .x(d => { return scale.x(d.date) })\n        .curve(d3.curveCatmullRom)\n\n      const newAreas = areas.map(function (item, i) {\n        areaFixed\n          .y0(d => {\n            let sum = 0\n            for (let n = 0; n < i; n++) {\n              sum = sum + d[areas[n]]\n            }\n            return scale.y(sum)\n          })\n          .y1(d => {\n            let sum = 0\n            for (let n = 0; n <= i; n++) {\n              sum = sum + d[areas[n]]\n            }\n            return scale.y(sum)\n          })\n        return {\n          d: areaFixed(data),\n          id: areas[i]\n        }\n      })\n\n      return newAreas\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n// @import \"library/src/style/base.scss\";\n@import \"library/src/style/variables.scss\";\n\n.lineDotted {\n  stroke: #b1b1b1;\n  stroke-dasharray: 4;\n}\n\n.line {\n  stroke: darken( $color-yellow, 50% );\n  fill: none;\n}\n\n.area {\n  //stroke: darken( $color-green, 50% );\n}\n\n#Electricity {\n  fill: darken( $color-yellow, 5% );\n}\n\n#Building {\n  fill: darken( $color-yellow, 20% );\n}\n\n#Transports {\n  fill: darken( $color-yellow, 40% );\n}\n\n#OtherEnergy {\n  fill: desaturate( $color-yellow, 60% );\n}\n\n#Industry {\n  fill: darken($color-yellow, 30%);\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}