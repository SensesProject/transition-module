{"remainingRequest":"/Users/francescamorini/projects/senses/node_modules/babel-loader/lib/index.js!/Users/francescamorini/projects/senses/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/francescamorini/projects/senses/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/senses/src/components/EmissionsChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/francescamorini/projects/senses/src/components/EmissionsChart.vue","mtime":1575649891305},{"path":"/Users/francescamorini/projects/senses/node_modules/cache-loader/dist/cjs.js","mtime":1575047512487},{"path":"/Users/francescamorini/projects/senses/node_modules/babel-loader/lib/index.js","mtime":1575047512399},{"path":"/Users/francescamorini/projects/senses/node_modules/cache-loader/dist/cjs.js","mtime":1575047512487},{"path":"/Users/francescamorini/projects/senses/node_modules/vue-loader/lib/index.js","mtime":1575047516506}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLyBMaWJyYXJpZXMKaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwppbXBvcnQgeyBncm91cCwgZ3JvdXBzLCByb2xsdXAsIHJvbGx1cHMgfSBmcm9tICdkMy1hcnJheSc7IC8vIGNvbXBvbmVudHMKCmltcG9ydCBFbWlzc2lvbnNEb3RzIGZyb20gIi4vc3ViY29tcG9uZW50cy9FbWlzc2lvbnNEb3RzLnZ1ZSI7CmltcG9ydCBEcmFnbGluZSBmcm9tICIuL3N1YmNvbXBvbmVudHMvRHJhZ2xpbmUudnVlIjsgLy8gRGF0YQoKaW1wb3J0IEVtaXNzaW9uRGF0YSBmcm9tICIuLi9hc3NldHMvZGF0YS9lbWlzc2lvbnMtbWVyZ2VkLmpzb24iOwppbXBvcnQgSGlzdG9yaWNhbEVtaXNzaW9ucyBmcm9tICIuLi9hc3NldHMvZGF0YS9lbWlzc2lvbnNfaGlzdG9yaWNhbC5qc29uIjsgLy8gbWVyZ2UgZGF0YSBpbnRvIG9uZSBmaWxlCi8vIGZ1bmN0aW9uIG1lcmdlICgpewovLyAgIGNvbnN0IG1lcmdlZCA9IGVtaXNzaW9uc0RhdGEubWFwKGUgPT4gewovLyAgICAgY29uc29sZS5sb2coZS5ZZWFyKQovLyAgICAgcmV0dXJuIHsKLy8gICAgICAgLi4uZW1pc3Npb25zRGF0YS5maW5kKGQgPT4gZC5ZZWFyID09PSBlLlllYXIpLAovLyAgICAgICAuLi5zdWJFbWlzc2lvbnNEYXRhLmZpbmQoZCA9PiBkLlllYXIgPT09IGUuWWVhciksCi8vICAgICAgIC4uLkFwcGxpY2F0aW9uc1NoYXJlLmZpbmQoZCA9PiBkLlllYXIgPT09IGUuWWVhcikKLy8gICAgIH0KLy8gICB9KQovLyAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KG1lcmdlZCkpCi8vIH0KLy8gbWVyZ2UoKQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdFbWlzc2lvbnNDaGFydCcsCiAgY29tcG9uZW50czogewogICAgRW1pc3Npb25zRG90czogRW1pc3Npb25zRG90cywKICAgIERyYWdsaW5lOiBEcmFnbGluZQogIH0sCiAgcHJvcHM6IHsKICAgIHdpZHRoOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBoZWlnaHQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHN0ZXA6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWFyZ2luOiB7CiAgICAgICAgbGVmdDogMjUwLAogICAgICAgIHRvcDogMzAsCiAgICAgICAgYm90dG9tOiAzMCwKICAgICAgICByaWdodDogMzAKICAgICAgfQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBzdGVwOiBmdW5jdGlvbiBzdGVwKF9zdGVwKSB7CiAgICAgIGNvbnNvbGUubG9nKF9zdGVwLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgaW5uZXJXaWR0aDogZnVuY3Rpb24gaW5uZXJXaWR0aCgpIHsKICAgICAgcmV0dXJuIHRoaXMud2lkdGggLSB0aGlzLm1hcmdpbi5sZWZ0IC0gdGhpcy5tYXJnaW4ucmlnaHQ7CiAgICB9LAogICAgaW5uZXJIZWlnaHQ6IGZ1bmN0aW9uIGlubmVySGVpZ2h0KCkgewogICAgICByZXR1cm4gdGhpcy5oZWlnaHQgLSB0aGlzLm1hcmdpbi50b3AgLSB0aGlzLm1hcmdpbi5ib3R0b207CiAgICB9LAogICAgbWF4WWVhcjogZnVuY3Rpb24gbWF4WWVhcigpIHsKICAgICAgcmV0dXJuIHRoaXMuc3RlcCA+PSAyID8gMjAxNSA6IDIwODA7CiAgICB9LAogICAgbGluZURhdGE6IGZ1bmN0aW9uIGxpbmVEYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLy8gb3RoZXIgd2F5IG9mIGRvaW5nIGl0OgogICAgICAvLyBjb25zdCBkYXRhID0gSGlzdG9yaWNhbEVtaXNzaW9ucy5maWx0ZXIoZCA9PiBkLlllYXIgPD0gdGhpcy5tYXhZZWFyKQogICAgICAvLyBjb25zdCByZWR1Y2VkID0gcm9sbHVwcyhkYXRhLCB2ID0+IGQzLnN1bSh2LCBkID0+IGQuVmFsdWUpLCBkID0+IGQuWWVhcikKICAgICAgLy8gY29uc29sZS5sb2coJ2xpbmVEYXRhJywgZGF0YSwgcmVkdWNlZCkKICAgICAgcmV0dXJuIEVtaXNzaW9uRGF0YS5maWx0ZXIoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5ZZWFyIDw9IF90aGlzLm1heFllYXI7CiAgICAgIH0pLm1hcChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBbZC5ZZWFyLCBkLkVtaXNzaW9uc107CiAgICAgIH0pOwogICAgfSwKICAgIGxpbmVQYXRoOiBmdW5jdGlvbiBsaW5lUGF0aCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gZDMubGluZSgpLngoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLnNjYWxlcy54KGRbMF0pOwogICAgICB9KS55KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5zY2FsZXMueShkWzFdKTsKICAgICAgfSkuY3VydmUoZDMuY3VydmVMaW5lYXIpKHRoaXMubGluZURhdGEpOwogICAgfSwKICAgIHNjYWxlczogZnVuY3Rpb24gc2NhbGVzKCkgewogICAgICByZXR1cm4gewogICAgICAgIHg6IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFsxOTkwLCB0aGlzLm1heFllYXJdKS5yYW5nZVJvdW5kKFswLCB0aGlzLmlubmVyV2lkdGggLSAyMDBdKSwKICAgICAgICB5OiBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgNDAwMDAwMDBdKS5yYW5nZVJvdW5kKFt0aGlzLmlubmVySGVpZ2h0IC0gdGhpcy5tYXJnaW4uYm90dG9tLCAwXSkKICAgICAgfTsKICAgIH0sCiAgICBzdWJzZWN0b3JzOiBmdW5jdGlvbiBzdWJzZWN0b3JzKCkgewogICAgICByZXR1cm4gW3sKICAgICAgICBrZXk6ICdQdWJsaWMnLAogICAgICAgIGNvbG9yOiAnIzMzMTIxYycsCiAgICAgICAgYWN0aXZlOiAzLjEKICAgICAgfSwgewogICAgICAgIGtleTogJ0F1dG9wcm9kdWNlZCcsCiAgICAgICAgY29sb3I6ICcjMzMxMjFjJywKICAgICAgICBhY3RpdmU6IDMuMQogICAgICB9LCB7CiAgICAgICAga2V5OiAnT3RoZXJFbicsCiAgICAgICAgY29sb3I6ICcjNjExNzMxJywKICAgICAgICBhY3RpdmU6IDMuMgogICAgICB9LCB7CiAgICAgICAga2V5OiAnQ29tYnVzdGlvbicsCiAgICAgICAgY29sb3I6ICcjZGQ1Zjg0JywKICAgICAgICBhY3RpdmU6IDMuMwogICAgICB9LCB7CiAgICAgICAga2V5OiAnUHJvZHVjdGlvbicsCiAgICAgICAgY29sb3I6ICcjZGQ1Zjg0JywKICAgICAgICBhY3RpdmU6IDMuMwogICAgICB9LCB7CiAgICAgICAga2V5OiAnU29sdmVudHMnLAogICAgICAgIGNvbG9yOiAnI2RkNWY4NCcsCiAgICAgICAgYWN0aXZlOiAzLjMKICAgICAgfSwgewogICAgICAgIGtleTogJ090aGVyUHJvYycsCiAgICAgICAgY29sb3I6ICcjZGQ1Zjg0JywKICAgICAgICBhY3RpdmU6IDMuMwogICAgICB9LCB7CiAgICAgICAga2V5OiAnSW5kV2FzdGUnLAogICAgICAgIGNvbG9yOiAnI2RkNWY4NCcsCiAgICAgICAgYWN0aXZlOiAzLjMKICAgICAgfSwgewogICAgICAgIGtleTogJ0F2aWF0aW9uJywKICAgICAgICBjb2xvcjogJyNlZDk2YWInLAogICAgICAgIGFjdGl2ZTogMy40CiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdSb2FkJywKICAgICAgICBjb2xvcjogJyNlZDk2YWInLAogICAgICAgIGFjdGl2ZTogMy40CiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdPdGhlcicsCiAgICAgICAgY29sb3I6ICcjZWQ5NmFiJywKICAgICAgICBhY3RpdmU6IDMuNAogICAgICB9LCB7CiAgICAgICAga2V5OiAnU2hpcHBpbmcnLAogICAgICAgIGNvbG9yOiAnI2VkOTZhYicsCiAgICAgICAgYWN0aXZlOiAzLjQKICAgICAgfSwgewogICAgICAgIGtleTogJ0NvbW1SZXMnLAogICAgICAgIGNvbG9yOiAnI2Y4Y2JkNCcsCiAgICAgICAgYWN0aXZlOiAzLjUKICAgICAgfSwgewogICAgICAgIGtleTogJ0FncmljdWx0dXJlJywKICAgICAgICBjb2xvcjogJyNmOGNiZDQnLAogICAgICAgIGFjdGl2ZTogMy41CiAgICAgIH1dOwogICAgfSwKICAgIGFwcGxpY2F0aW9uczogZnVuY3Rpb24gYXBwbGljYXRpb25zKCkgewogICAgICByZXR1cm4gW3sKICAgICAgICBrZXk6ICdFbGVjdHJpY2l0eScsCiAgICAgICAgY29sb3I6ICcjMzMxMjFjJywKICAgICAgICBhY3RpdmU6IDMuMQogICAgICB9LCB7CiAgICAgICAga2V5OiAnT3RoZXJFbmVyZ3knLAogICAgICAgIGNvbG9yOiAnIzYxMTczMScsCiAgICAgICAgYWN0aXZlOiAzLjEKICAgICAgfSwgewogICAgICAgIGtleTogJ0luZHVzdHJ5JywKICAgICAgICBjb2xvcjogJyNkZDVmODQnLAogICAgICAgIGFjdGl2ZTogMy4xCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdUcmFuc3BvcnRzJywKICAgICAgICBjb2xvcjogJyNlZDk2YWInLAogICAgICAgIGFjdGl2ZTogMy4xCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdCdWlsZGluZycsCiAgICAgICAgY29sb3I6ICcjZjhjYmQ0JywKICAgICAgICBhY3RpdmU6IDMuMQogICAgICB9XTsKICAgIH0sCiAgICBhcHBsaWNhdGlvbnNEYXRhOiBmdW5jdGlvbiBhcHBsaWNhdGlvbnNEYXRhKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBzdGFja2VkID0gZDMuc3RhY2soKS5rZXlzKHRoaXMuYXBwbGljYXRpb25zLm1hcChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmtleTsKICAgICAgfSkpKEVtaXNzaW9uRGF0YSk7CiAgICAgIHJldHVybiBzdGFja2VkLm1hcChmdW5jdGlvbiAoZCwgaSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBkOiBfdGhpczMuYXJlYUdlbmVyYXRvcihkKSwKICAgICAgICAgIGNvbG9yOiBfdGhpczMuYXBwbGljYXRpb25zW2ldLmNvbG9yLAogICAgICAgICAgaWQ6IF90aGlzMy5hcHBsaWNhdGlvbnNbaV0ua2V5CiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9LAogICAgc3Vic2VjdG9yc0RhdGE6IGZ1bmN0aW9uIHN1YnNlY3RvcnNEYXRhKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHZhciBzdGFja2VkID0gZDMuc3RhY2soKS5rZXlzKHRoaXMuc3Vic2VjdG9ycy5tYXAoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5rZXk7CiAgICAgIH0pKShFbWlzc2lvbkRhdGEpOwogICAgICByZXR1cm4gc3RhY2tlZC5tYXAoZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgZDogX3RoaXM0LmFyZWFHZW5lcmF0b3IoZCksCiAgICAgICAgICBjb2xvcjogX3RoaXM0LnN1YnNlY3RvcnNbaV0uY29sb3IsCiAgICAgICAgICBpZDogX3RoaXM0LnN1YnNlY3RvcnNbaV0ua2V5LAogICAgICAgICAgYWN0aXZlOiBfdGhpczQuc3Vic2VjdG9yc1tpXS5hY3RpdmUsCiAgICAgICAgICBkYXRhOiBkCiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9LAogICAgc3Vic2VjdG9yc0RhdGFBY3RpdmU6IGZ1bmN0aW9uIHN1YnNlY3RvcnNEYXRhQWN0aXZlKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHJldHVybiB0aGlzLnN1YnNlY3RvcnNEYXRhLmZpbHRlcihmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmFjdGl2ZSA9PT0gX3RoaXM1LnN0ZXA7CiAgICAgIH0pOwogICAgfSwKICAgIGFyZWFHZW5lcmF0b3I6IGZ1bmN0aW9uIGFyZWFHZW5lcmF0b3IoKSB7CiAgICAgIHZhciBfdGhpcyRzY2FsZXMgPSB0aGlzLnNjYWxlcywKICAgICAgICAgIHggPSBfdGhpcyRzY2FsZXMueCwKICAgICAgICAgIHkgPSBfdGhpcyRzY2FsZXMueTsKICAgICAgcmV0dXJuIGQzLmFyZWEoKS54KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHgoZC5kYXRhLlllYXIpOwogICAgICB9KS5jdXJ2ZShkMy5jdXJ2ZUxpbmVhcikueTAoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4geShkWzBdKTsKICAgICAgfSkueTEoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4geShkWzFdKTsKICAgICAgfSk7CiAgICB9LAogICAgZG90c1Bvc2l0aW9uOiBmdW5jdGlvbiBkb3RzUG9zaXRpb24oKSB7CiAgICAgIHZhciBfdGhpcyRzY2FsZXMyID0gdGhpcy5zY2FsZXMsCiAgICAgICAgICB4ID0gX3RoaXMkc2NhbGVzMi54LAogICAgICAgICAgeSA9IF90aGlzJHNjYWxlczIueTsKICAgICAgdmFyIG5ldE9uZSA9IFsyMDUwLCAwXTsKICAgICAgdmFyIE5ldFR3byA9IFsyMDc1LCAwXTsKICAgICAgcmV0dXJuIHsKICAgICAgICBjeDogeChuZXRPbmVbMF0pLAogICAgICAgIGN5OiB5KG5ldE9uZVsxXSkKICAgICAgfTsKICAgIH0KICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIGF4aXM6IGZ1bmN0aW9uIGF4aXMoZWwsIGJpbmRpbmcpIHsKICAgICAgdmFyIGF4aXMgPSBiaW5kaW5nLmFyZzsgLy8gY29uc29sZS5sb2coImF4aXMiLCBheGlzKTsKCiAgICAgIHZhciBheGlzTWV0aG9kID0gewogICAgICAgIHg6ICdheGlzVG9wJywKICAgICAgICB5OiAnYXhpc0xlZnQnCiAgICAgIH1bYXhpc107CiAgICAgIHZhciB0aWNrRm9ybWF0ID0gewogICAgICAgIHg6IGQzLmZvcm1hdCgnZCcpLAogICAgICAgIHk6IGQzLmZvcm1hdCgnLjJzJykKICAgICAgfVtheGlzXTsKICAgICAgdmFyIG1ldGhvZEFyZyA9IGJpbmRpbmcudmFsdWVbYXhpc107CiAgICAgIGQzLnNlbGVjdChlbCkudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMDApLmNhbGwoZDNbYXhpc01ldGhvZF0obWV0aG9kQXJnKS50aWNrU2l6ZSgwKS50aWNrUGFkZGluZygxMCkudGlja0Zvcm1hdCh0aWNrRm9ybWF0KSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["EmissionsChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"visualization\" id=\"emissions__chart\">\n    <svg class=\"emissions\" width=\"100%\" height=\"100%\">\n      <g :transform=\"'translate(' + margin.left + ',' + margin.top + ')'\">\n        <g\n          class=\"axis\"\n          v-axis:x=\"scales\"\n          :transfrom=\"'translate(' + 0 + ',' + this.innerHeight + ')'\"\n        />\n        <EmissionsDots\n        :step = \"step\"\n        :width=\"this.innerWidth\"\n        :margin=\"margin\"\n        :height=\"this.innerHeight\"\n        :scales=\"scales\"\n        />\n        <g class=\"axis\" v-axis:y=\"scales\" />\n        <g id=\"first_step\" v-if=\"step <= 2\">\n          <path id=\"emissions\" :d=\"linePath\" />\n        </g>\n        <g class=\"applicationsData\" v-if=\"step >= 3\">\n          <path\n            v-for=\"(chunk, i) in applicationsData\"\n            v-bind:key=\"i\"\n            :d=\"chunk.d\"\n            :fill=\"chunk.color\"\n            :id=\"chunk.id\"\n            class=\"emission__chunks\"\n            :class=\"{ inactive: step >= 3.1 }\"\n          />\n        </g>\n        <g class=\"subsectorsData\" v-if=\"step >= 3.1\">\n          <path\n            v-for=\"(chunk, i) in subsectorsData\"\n            v-bind:key=\"i\"\n            :d=\"chunk.d\"\n            :fill=\"chunk.color\"\n            :id=\"chunk.id\"\n            class=\"emission__chunks\"\n            :class=\"{ inactive: chunk.active != step }\"\n          />\n        </g>\n        <dragline\n          v-if=\"step > 3\"\n          :width=\"this.innerWidth\"\n          :margin=\"margin\"\n          :height=\"this.innerHeight\"\n          :scales=\"scales\"\n          :data=\"subsectorsDataActive\"\n        />\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\n// Libraries\nimport * as d3 from 'd3'\n\nimport { group, groups, rollup, rollups } from 'd3-array'\n\n// components\nimport EmissionsDots from './subcomponents/EmissionsDots.vue'\nimport Dragline from './subcomponents/Dragline.vue'\n\n// Data\nimport EmissionData from '../assets/data/emissions-merged.json'\nimport HistoricalEmissions from '../assets/data/emissions_historical.json'\n\n// merge data into one file\n// function merge (){\n//   const merged = emissionsData.map(e => {\n//     console.log(e.Year)\n\n//     return {\n//       ...emissionsData.find(d => d.Year === e.Year),\n//       ...subEmissionsData.find(d => d.Year === e.Year),\n//       ...ApplicationsShare.find(d => d.Year === e.Year)\n//     }\n//   })\n//   console.log(JSON.stringify(merged))\n// }\n// merge()\n\nexport default {\n  name: 'EmissionsChart',\n  components: {\n    EmissionsDots,\n    Dragline\n  },\n  props: {\n    width: {\n      type: Number,\n      required: true\n    },\n    height: {\n      type: Number,\n      required: true\n    },\n    step: {\n      type: Number,\n      default: 0\n    }\n  },\n  data () {\n    return {\n      margin: {\n        left: 250,\n        top: 30,\n        bottom: 30,\n        right: 30\n      }\n    }\n  },\n  watch: {\n    step: function (step) {\n      console.log(step, this.width, this.height)\n    }\n  },\n  computed: {\n    innerWidth () {\n      return this.width - this.margin.left - this.margin.right\n    },\n    innerHeight () {\n      return this.height - this.margin.top - this.margin.bottom\n    },\n    maxYear: function () {\n      return this.step >= 2 ? 2015 : 2080\n    },\n    lineData: function () {\n      // other way of doing it:\n      // const data = HistoricalEmissions.filter(d => d.Year <= this.maxYear)\n      // const reduced = rollups(data, v => d3.sum(v, d => d.Value), d => d.Year)\n      // console.log('lineData', data, reduced)\n      return EmissionData.filter(d => d.Year <= this.maxYear).map(d => [\n        d.Year,\n        d.Emissions\n      ])\n    },\n    linePath () {\n      return d3\n        .line()\n        .x(d => {\n          return this.scales.x(d[0])\n        })\n        .y(d => {\n          return this.scales.y(d[1])\n        })\n        .curve(d3.curveLinear)(this.lineData)\n    },\n    scales () {\n      return {\n        x: d3\n          .scaleLinear()\n          .domain([1990, this.maxYear])\n          .rangeRound([0, this.innerWidth - 200]),\n        y: d3\n          .scaleLinear()\n          .domain([0, 40000000])\n          .rangeRound([this.innerHeight - this.margin.bottom, 0])\n      }\n    },\n    subsectors: function () {\n      return [\n        { key: 'Public', color: '#33121c', active: 3.1 },\n        { key: 'Autoproduced', color: '#33121c', active: 3.1 },\n        { key: 'OtherEn', color: '#611731', active: 3.2 },\n        { key: 'Combustion', color: '#dd5f84', active: 3.3 },\n        { key: 'Production', color: '#dd5f84', active: 3.3 },\n        { key: 'Solvents', color: '#dd5f84', active: 3.3 },\n        { key: 'OtherProc', color: '#dd5f84', active: 3.3 },\n        { key: 'IndWaste', color: '#dd5f84', active: 3.3 },\n        { key: 'Aviation', color: '#ed96ab', active: 3.4 },\n        { key: 'Road', color: '#ed96ab', active: 3.4 },\n        { key: 'Other', color: '#ed96ab', active: 3.4 },\n        { key: 'Shipping', color: '#ed96ab', active: 3.4 },\n        { key: 'CommRes', color: '#f8cbd4', active: 3.5 },\n        { key: 'Agriculture', color: '#f8cbd4', active: 3.5 }\n      ]\n    },\n    applications: function () {\n      return [\n        { key: 'Electricity', color: '#33121c', active: 3.1 },\n        { key: 'OtherEnergy', color: '#611731', active: 3.1 },\n        { key: 'Industry', color: '#dd5f84', active: 3.1 },\n        { key: 'Transports', color: '#ed96ab', active: 3.1 },\n        { key: 'Building', color: '#f8cbd4', active: 3.1 }\n      ]\n    },\n\n    applicationsData: function () {\n      const stacked = d3.stack().keys(this.applications.map(d => d.key))(\n        EmissionData\n      )\n\n      return stacked.map((d, i) => ({\n        d: this.areaGenerator(d),\n        color: this.applications[i].color,\n        id: this.applications[i].key\n      }))\n    },\n    subsectorsData: function () {\n      const stacked = d3.stack().keys(this.subsectors.map(d => d.key))(\n        EmissionData\n      )\n\n      return stacked.map((d, i) => ({\n        d: this.areaGenerator(d),\n        color: this.subsectors[i].color,\n        id: this.subsectors[i].key,\n        active: this.subsectors[i].active,\n        data: d\n      }))\n    },\n    subsectorsDataActive: function () {\n      return this.subsectorsData.filter(d => d.active === this.step)\n    },\n    areaGenerator: function () {\n      const { x, y } = this.scales\n      return d3\n        .area()\n        .x(d => x(d.data.Year))\n        .curve(d3.curveLinear)\n        .y0(d => y(d[0]))\n        .y1(d => y(d[1]))\n    },\n    dotsPosition () {\n      const { x, y } = this.scales\n      const netOne = [2050, 0]\n      const NetTwo = [2075, 0]\n\n      return {\n        cx: x(netOne[0]),\n        cy: y(netOne[1])\n      }\n    }\n  },\n  directives: {\n    axis (el, binding) {\n      const axis = binding.arg\n      // console.log(\"axis\", axis);\n      const axisMethod = { x: 'axisTop', y: 'axisLeft' }[axis]\n      const tickFormat = { x: d3.format('d'), y: d3.format('.2s') }[axis]\n      const methodArg = binding.value[axis]\n\n      d3.select(el)\n        .transition()\n        .duration(1000)\n        .call(d3[axisMethod](methodArg)\n          .tickSize(0)\n          .tickPadding(10)\n          .tickFormat(tickFormat))\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"library/src/style/variables.scss\";\n.visualization {\n  width: inherit;\n  height: inherit;\n}\n\n#emissions {\n  stroke: $color-red;\n  fill: none;\n}\n\n.emission__chunks {\n  stroke: $color-gray;\n}\n\n.subsectorsData {\n  .inactive {\n    display: none;\n  }\n}\n\n.applicationsData {\n  .inactive {\n    fill-opacity: 0.1;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}