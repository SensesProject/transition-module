{"remainingRequest":"/Users/francescamorini/projects/transition-module/node_modules/babel-loader/lib/index.js!/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/transition-module/src/components/EmissionsChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/francescamorini/projects/transition-module/src/components/EmissionsChart.vue","mtime":1572540162516},{"path":"/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy9mcmFuY2VzY2Ftb3JpbmkvcHJvamVjdHMvdHJhbnNpdGlvbi1tb2R1bGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLyBMaWJyYXJpZXMKaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOyAvLyBjb21wb25lbnRzCgppbXBvcnQgRHJhZ2xpbmUgZnJvbSAiLi9zdWJjb21wb25lbnRzL0RyYWdsaW5lLnZ1ZSI7IC8vIERhdGEKCmltcG9ydCBlbWlzc2lvbnNEYXRhIGZyb20gIi4uL2Fzc2V0cy9kYXRhL2VtaXNzaW9ucy5qc29uIjsKaW1wb3J0IHN1YkVtaXNzaW9uc0RhdGEgZnJvbSAiLi4vYXNzZXRzL2RhdGEvZW1pc3Npb25zLXN0YWNrZWQuanNvbiI7CmltcG9ydCBBcHBsaWNhdGlvbnNTaGFyZSBmcm9tICIuLi9hc3NldHMvZGF0YS9zdWJzZWN0b3JzLWFwcGxpY2F0aW9ucy1zaGFyZS5qc29uIjsKaW1wb3J0IEhpc3RvcmljYWxFbWlzc2lvbnMgZnJvbSAiLi4vYXNzZXRzL2RhdGEvZW1pc3Npb25zX2hpc3RvcmljYWwuanNvbiI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRW1pc3Npb25zQ2hhcnQnLAogIGNvbXBvbmVudHM6IHsKICAgIERyYWdsaW5lOiBEcmFnbGluZQogIH0sCiAgcHJvcHM6IHsKICAgIHdpZHRoOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBoZWlnaHQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVtaXNzaW9uc0RhdGE6IGVtaXNzaW9uc0RhdGEsCiAgICAgIHN1YkVtaXNzaW9uc0RhdGE6IHN1YkVtaXNzaW9uc0RhdGEsCiAgICAgIEFwcGxpY2F0aW9uc1NoYXJlOiBBcHBsaWNhdGlvbnNTaGFyZSwKICAgICAgSGlzdG9yaWNhbEVtaXNzaW9uczogSGlzdG9yaWNhbEVtaXNzaW9ucywKICAgICAgbWFyZ2luOiB7CiAgICAgICAgbGVmdDogNzAsCiAgICAgICAgdG9wOiAzMCwKICAgICAgICBib3R0b206IDMwLAogICAgICAgIHJpZ2h0OiAzMAogICAgICB9CiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIHN0ZXA6IGZ1bmN0aW9uIHN0ZXAoX3N0ZXApIHsKICAgICAgY29uc29sZS5sb2coX3N0ZXAsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZSh7CiAgICBzdGVwOiBmdW5jdGlvbiBzdGVwKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zY3JvbGx5dGVsbGluZyA/IHN0YXRlLnNjcm9sbHl0ZWxsaW5nLnN0ZXAgOiBudWxsOwogICAgfQogIH0pLCB7CiAgICBpbm5lcldpZHRoOiBmdW5jdGlvbiBpbm5lcldpZHRoKCkgewogICAgICByZXR1cm4gdGhpcy53aWR0aCAtIHRoaXMubWFyZ2luLmxlZnQgLSB0aGlzLm1hcmdpbi5yaWdodDsKICAgIH0sCiAgICBpbm5lckhlaWdodDogZnVuY3Rpb24gaW5uZXJIZWlnaHQoKSB7CiAgICAgIHJldHVybiB0aGlzLmhlaWdodCAtIHRoaXMubWFyZ2luLnRvcCAtIHRoaXMubWFyZ2luLmJvdHRvbTsKICAgIH0sCiAgICBzY2FsZTogZnVuY3Rpb24gc2NhbGUoKSB7CiAgICAgIHZhciBlbWlzc2lvbnMgPSB0aGlzLmVtaXNzaW9uc0RhdGE7CiAgICAgIHZhciBwYXJzZURhdGUgPSBkMy50aW1lUGFyc2UoJyVZJyk7CiAgICAgIHZhciBtYXhEYXRlID0gcGFyc2VEYXRlKDIwODApOwoKICAgICAgaWYgKHRoaXMuc3RlcCA+PSAyKSB7CiAgICAgICAgbWF4RGF0ZSA9IHBhcnNlRGF0ZSgyMDE1KTsKICAgICAgfQoKICAgICAgZW1pc3Npb25zLmZvckVhY2goZnVuY3Rpb24gKGQpIHsKICAgICAgICBkLmRhdGUgPSBwYXJzZURhdGUoZC5ZZWFyKTsKICAgICAgfSk7CiAgICAgIHZhciB4ID0gZDMuc2NhbGVUaW1lKCkuZG9tYWluKFtkMy5taW4oZW1pc3Npb25zLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmRhdGU7CiAgICAgIH0pLCBtYXhEYXRlXSkucmFuZ2VSb3VuZChbMCwgdGhpcy5pbm5lcldpZHRoXSk7CiAgICAgIHZhciB5ID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oWzAsIDQwMDAwMDAwXSkucmFuZ2VSb3VuZChbdGhpcy5pbm5lckhlaWdodCwgMF0pOwogICAgICByZXR1cm4gewogICAgICAgIHBhcnNlRGF0ZTogcGFyc2VEYXRlLAogICAgICAgIHg6IHgsCiAgICAgICAgeTogeQogICAgICB9OwogICAgfSwKICAgIGdyb3VwRGF0YTogZnVuY3Rpb24gZ3JvdXBEYXRhKCkgewogICAgICB2YXIgZW1pc3Npb25zID0gdGhpcy5IaXN0b3JpY2FsRW1pc3Npb25zOwogICAgICB2YXIgZ3JvdXBzID0gZDMuZ3JvdXAoZW1pc3Npb25zLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLlNlY3RvcjsKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKCdlbWlzc2lvbnMnLCBlbWlzc2lvbnMpOwogICAgICByZXR1cm4gZW1pc3Npb25zOwogICAgfSwKICAgIGNhbGNMaW5lOiBmdW5jdGlvbiBjYWxjTGluZSgpIHsKICAgICAgdmFyIHNjYWxlID0gdGhpcy5zY2FsZTsKICAgICAgdmFyIGVtaXNzaW9ucyA9IHRoaXMuZ3JvdXBEYXRhOwogICAgICB2YXIgcGF0aCA9IGQzLmxpbmUoKS54KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHNjYWxlLngoZC5kYXRlKTsKICAgICAgfSkueShmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBzY2FsZS55KGQuRW1pc3Npb25zKTsKICAgICAgfSkuY3VydmUoZDMuY3VydmVMaW5lYXIpOwogICAgICByZXR1cm4gcGF0aChlbWlzc2lvbnNEYXRhKTsKICAgIH0sCiAgICBzdWJzZWN0b3JzTGFiZWxzOiBmdW5jdGlvbiBzdWJzZWN0b3JzTGFiZWxzKCkgewogICAgICB2YXIgc3Vic2VjdG9ycyA9IHRoaXMuQXBwbGljYXRpb25zU2hhcmU7CiAgICAgIHZhciBzdWJzZWN0b3JzTGFiZWxzID0gW107CiAgICAgIHN1YnNlY3RvcnMucHVzaChzdWJzZWN0b3JzWzFdKTsKICAgICAgcmV0dXJuIHN1YnNlY3RvcnNMYWJlbHM7CiAgICB9LAogICAgc2VjdG9yczogZnVuY3Rpb24gc2VjdG9ycygpIHsKICAgICAgaWYgKHRoaXMuc3RlcCA9PT0gMy4xKSB7CiAgICAgICAgcmV0dXJuIFsnUHVibGljJywgJ0F1dG9wcm9kdWNlZCcsICdPdGhlckVuJywgJ0NvbWJ1c3Rpb24nLCAnUHJvZHVjdGlvbicsICdTb2x2ZW50cycsICdPdGhlclByb2MnLCAnSW5kV2FzdGUnLCAnQXZpYXRpb24nLCAnUm9hZCcsICdPdGhlcicsICdTaGlwcGluZycsICdDb21tUmVzJywgJ0FncmljdWx0dXJlJ107CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIFsnRWxlY3RyaWNpdHknLCAnT3RoZXJFbmVyZ3knLCAnSW5kdXN0cnknLCAnVHJhbnNwb3J0cycsICdCdWlsZGluZyddOwogICAgICB9CiAgICB9LAogICAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgICAgaWYgKHRoaXMuc3RlcCA9PT0gMy4xKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuQXBwbGljYXRpb25zU2hhcmU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc3ViRW1pc3Npb25zRGF0YTsKICAgICAgfQogICAgfSwKICAgIHN1YnNlY3RvcnNTZWxlY3RlZDogZnVuY3Rpb24gc3Vic2VjdG9yc1NlbGVjdGVkKCkgewogICAgICBpZiAodGhpcy5zdGVwID09PSAzLjEpIHsKICAgICAgICByZXR1cm4gWydQdWJsaWMnLCAnQXV0b3Byb2R1Y2VkJ107CiAgICAgIH0KCiAgICAgIHJldHVybiBbXTsKICAgIH0sCiAgICBzdWJzZWN0b3JzRGF0YTogZnVuY3Rpb24gc3Vic2VjdG9yc0RhdGEoKSB7CiAgICAgIHJldHVybiB0aGlzLmRhdGE7CiAgICB9LAogICAgc2VjdG9yQ2h1bmtzOiBmdW5jdGlvbiBzZWN0b3JDaHVua3MoKSB7CiAgICAgIHZhciBzZWN0b3JzID0gdGhpcy5zZWN0b3JzLAogICAgICAgICAgZGF0YSA9IHRoaXMuZGF0YSwKICAgICAgICAgIHNjYWxlID0gdGhpcy5zY2FsZTsKICAgICAgdmFyIGNodW5rQ29sb3JzID0gWycjMzMxMjFjJywgJyM2MTE3MzEnLCAnIzkzMTU0NycsICcjZGQ1Zjg0JywgJyNlZDk2YWInXTsKICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgZC5kYXRlID0gc2NhbGUucGFyc2VEYXRlKGQuWWVhcik7CiAgICAgIH0pOwogICAgICB2YXIgYXJlYXNYID0gZDMuYXJlYSgpLngoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gc2NhbGUueChkLmRhdGUpOwogICAgICB9KS5jdXJ2ZShkMy5jdXJ2ZUxpbmVhcik7CiAgICAgIHZhciBzZWN0b3JzQXJlYXMgPSBzZWN0b3JzLm1hcChmdW5jdGlvbiAoaXRlbSwgaSkgewogICAgICAgIGFyZWFzWC55MChmdW5jdGlvbiAoZCkgewogICAgICAgICAgdmFyIHN1bSA9IDA7CgogICAgICAgICAgZm9yICh2YXIgbiA9IDA7IG4gPCBpOyBuKyspIHsKICAgICAgICAgICAgc3VtID0gc3VtICsgZFtzZWN0b3JzW25dXTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gc2NhbGUueShzdW0pOwogICAgICAgIH0pLnkxKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICB2YXIgc3VtID0gMDsKCiAgICAgICAgICBmb3IgKHZhciBuID0gMDsgbiA8PSBpOyBuKyspIHsKICAgICAgICAgICAgc3VtID0gc3VtICsgZFtzZWN0b3JzW25dXTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gc2NhbGUueShzdW0pOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiB7CiAgICAgICAgICBkOiBhcmVhc1goZGF0YSksCiAgICAgICAgICBjb2xvcjogY2h1bmtDb2xvcnNbaV0sCiAgICAgICAgICBpZDogc2VjdG9yc1tpXQogICAgICAgIH07CiAgICAgIH0pOwogICAgICByZXR1cm4gc2VjdG9yc0FyZWFzOwogICAgfQogIH0pLAogIGRpcmVjdGl2ZXM6IHsKICAgIGF4aXM6IGZ1bmN0aW9uIGF4aXMoZWwsIGJpbmRpbmcpIHsKICAgICAgdmFyIGF4aXMgPSBiaW5kaW5nLmFyZzsKICAgICAgdmFyIGF4aXNNZXRob2QgPSB7CiAgICAgICAgeDogJ2F4aXNCb3R0b20nLAogICAgICAgIHk6ICdheGlzTGVmdCcKICAgICAgfVtheGlzXTsKICAgICAgdmFyIG1ldGhvZEFyZyA9IGJpbmRpbmcudmFsdWVbYXhpc107CiAgICAgIGQzLnNlbGVjdChlbCkuY2FsbChkM1theGlzTWV0aG9kXShtZXRob2RBcmcpKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["EmissionsChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"visualization\" id=\"emissions__chart\">\n    <svg class=\"emissions\" width=\"100%\" height=\"100%\">\n      <g :transform=\"'translate('+ margin.left + ',' + margin.top + ')'\">\n        <g class=\"axis\" v-axis:x=\"scale\" :transfrom=\"'translate('+ 0 + ',' + this.innerHeight + ')'\"></g>\n        <g class=\"axis\" v-axis:y=\"scale\"></g>\n        <g id=\"first_step\" v-show=\"step <= 2\">\n          <path id=\"emissions\" :d='calcLine' />\n        </g>\n        <g id=\"second_step\" v-show=\"step >=3\">\n          <path\n            v-for=\"(chunk, i) in sectorChunks\"\n            v-bind:key='i'\n            :d='chunk.d'\n            :fill='chunk.color'\n            :id='chunk.id'\n            class=\"emission__chunks\"\n          />\n       </g>\n       <dragline :width=\"this.innerWidth\" :margin=\"margin\" :height=\"this.innerHeight\" :scale=\"scale\" :data=\"subsectorsData\" />\n    </g>\n    </svg>\n  </div>\n</template>\n\n<script>\n// Libraries\nimport * as d3 from 'd3'\nimport { mapState } from 'vuex'\n\n// components\nimport Dragline from './subcomponents/Dragline.vue'\n\n// Data\nimport emissionsData from '../assets/data/emissions.json'\nimport subEmissionsData from '../assets/data/emissions-stacked.json'\nimport ApplicationsShare from '../assets/data/subsectors-applications-share.json'\nimport HistoricalEmissions from '../assets/data/emissions_historical.json'\n\nexport default {\n  name: 'EmissionsChart',\n  components: {\n    Dragline\n  },\n  props: {\n    width: {\n      type: Number,\n      required: true\n    },\n    height: {\n      type: Number,\n      required: true\n    }\n  },\n  data () {\n    return {\n      emissionsData,\n      subEmissionsData,\n      ApplicationsShare,\n      HistoricalEmissions,\n      margin: {\n        left: 70,\n        top: 30,\n        bottom: 30,\n        right: 30\n      }\n    }\n  },\n  watch: {\n    step: function (step) {\n      console.log(step, this.width, this.height)\n    }\n  },\n  computed: {\n    ...mapState({\n      step: state => state.scrollytelling ? state.scrollytelling.step : null\n    }),\n    innerWidth (){\n      return this.width - this.margin.left - this.margin.right\n    },\n    innerHeight (){\n      return this.height - this.margin.top - this.margin.bottom\n    },\n    scale () {\n      const emissions = this.emissionsData\n      const parseDate = d3.timeParse('%Y')\n      let maxDate = parseDate(2080)\n      if (this.step >= 2) { maxDate = parseDate(2015) }\n\n      emissions.forEach(function (d) {\n        d.date = parseDate(d.Year)\n      })\n\n      let x = d3\n        .scaleTime()\n        .domain([d3.min(emissions, d => d.date), maxDate])\n        .rangeRound([0, this.innerWidth])\n\n      let y = d3\n        .scaleLinear()\n        .domain([0, 40000000])\n        .rangeRound([this.innerHeight, 0])\n\n      return {\n        parseDate,\n        x,\n        y\n      }\n    },\n    groupData () {\n      const emissions = this.HistoricalEmissions\n      let groups = d3.group(emissions, d => d.Sector)\n      console.log('emissions', emissions)\n      return emissions\n    },\n    calcLine () {\n      const scale = this.scale\n      const emissions = this.groupData\n      const path = d3\n        .line()\n        .x(d => { return scale.x(d.date) })\n        .y(d => { return scale.y(d.Emissions) })\n        .curve(d3.curveLinear)\n\n      return path(emissionsData)\n    },\n    subsectorsLabels () {\n      const subsectors = this.ApplicationsShare\n      let subsectorsLabels = []\n\n      subsectors.push(subsectors[1])\n\n      return subsectorsLabels\n    },\n    sectors () {\n      if(this.step === 3.1){\n        return ['Public', 'Autoproduced', 'OtherEn', 'Combustion', 'Production', 'Solvents', 'OtherProc', 'IndWaste', 'Aviation', 'Road', 'Other', 'Shipping', 'CommRes', 'Agriculture']\n      } else {\n        return ['Electricity', 'OtherEnergy', 'Industry', 'Transports', 'Building']\n      }\n    },\n    data () {\n      if(this.step === 3.1){\n        return this.ApplicationsShare\n      } else {\n        return this.subEmissionsData\n      }\n    },\n    subsectorsSelected: function (){\n      if(this.step === 3.1){\n        return ['Public', 'Autoproduced']\n      }\n      return []\n    },\n    subsectorsData: function (){\n      return this.data\n    },\n    sectorChunks () {\n      const { sectors, data, scale } = this\n      const chunkColors = ['#33121c', '#611731', '#931547', '#dd5f84', '#ed96ab']\n\n      data.forEach((d) => { d.date = scale.parseDate(d.Year) })\n\n      const areasX = d3\n        .area()\n        .x(d => { return scale.x(d.date) })\n        .curve(d3.curveLinear)\n\n      const sectorsAreas = sectors.map(function (item, i) {\n        areasX\n          .y0(d => {\n            let sum = 0\n            for (let n = 0; n < i; n++) {\n              sum = sum + d[sectors[n]]\n            }\n            return scale.y(sum)\n          })\n          .y1(d => {\n            let sum = 0\n            for (let n = 0; n <= i; n++) {\n              sum = sum + d[sectors[n]]\n            }\n            return scale.y(sum)\n          })\n        return {\n          d: areasX(data),\n          color: chunkColors[i],\n          id: sectors[i]\n        }\n      })\n      return sectorsAreas\n    }\n  },\n  directives: {\n    axis (el, binding) {\n      const axis = binding.arg\n      const axisMethod = { x: 'axisBottom', y: 'axisLeft' }[axis]\n      const methodArg = binding.value[axis]\n      d3.select(el)\n        .call(d3[axisMethod](methodArg))\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"library/src/style/variables.scss\";\n.visualization {\n  width: inherit;\n  height: inherit;\n}\n\nsvg {\n  // position: absolute;\n  // top: 10vh;\n}\n\n#emissions {\n  stroke: $color-red;\n  fill: none;\n}\n\n.emission__chunks {\n  stroke: $color-red;\n}\n</style>\n"],"sourceRoot":"src/components"}]}