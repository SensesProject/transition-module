{"remainingRequest":"/Users/francescamorini/projects/transition-module/node_modules/babel-loader/lib/index.js!/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/transition-module/src/components/carriersSelPaths.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/francescamorini/projects/transition-module/src/components/carriersSelPaths.vue","mtime":1572536223163},{"path":"/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy9mcmFuY2VzY2Ftb3JpbmkvcHJvamVjdHMvdHJhbnNpdGlvbi1tb2R1bGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgovLwovLwovLwovLwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBlbWlzc2lvbnNTdWJzZWN0b3JzIGZyb20gIi4uL2Fzc2V0cy9zdWJzZWN0b3JzLWVtaXNzaW9ucy1uZXN0Lmpzb24iOwppbXBvcnQgZW5lcmd5Q2FycmllcnMgZnJvbSAiLi4vYXNzZXRzL2VuZXJneS1jYXJyaWVycy13b3JsZC5qc29uIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDYXJyaWVyc1BhdGgnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzdWJzZWN0b3JzOiBlbWlzc2lvbnNTdWJzZWN0b3JzLAogICAgICBjYXJyaWVyczogZW5lcmd5Q2FycmllcnMsCiAgICAgIGNoYXJ0RGVmYXVsdHM6IHsKICAgICAgICB3aWR0aDogMTAwMCwKICAgICAgICBoZWlnaHQ6IDcwMCwKICAgICAgICBtYXJnaW46IHsKICAgICAgICAgIHRvcDogNSwKICAgICAgICAgIHJpZ2h0OiA1MCwKICAgICAgICAgIGJvdHRvbTogMjUsCiAgICAgICAgICBsZWZ0OiAwCiAgICAgICAgfQogICAgICB9LAogICAgICBzZWxlY3RlZDogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbGVjdDogZnVuY3Rpb24gc2VsZWN0KGV2ZW50KSB7CiAgICAgIHZhciB0YXJnZXRJZCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuaWQ7CiAgICAgIGlmICh0aGlzLnNlbGVjdGVkID09PSB0YXJnZXRJZCkgdGhpcy5zZWxlY3RlZCA9IG51bGw7ZWxzZSB0aGlzLnNlbGVjdGVkID0gdGFyZ2V0SWQ7CiAgICB9LAogICAgZ2V0U2NhbGU6IGZ1bmN0aW9uIGdldFNjYWxlKCkgewogICAgICB2YXIgc3Vic2VjdG9ycyA9IHRoaXMuc3Vic2VjdG9yczsKICAgICAgdmFyIGNhcnJpZXJzID0gdGhpcy5jYXJyaWVyczsKICAgICAgdmFyIGNoYXJ0RGVmYXVsdHMgPSB0aGlzLmNoYXJ0RGVmYXVsdHM7CiAgICAgIHZhciBzZWN0b3JzID0gWydFbGVjdHJpY2l0eScsICdCdWlsZGluZycsICdJbmR1c3RyeScsICdUcmFuc3BvcnQnXTsKICAgICAgdmFyIGZpbHRlckVsZSA9IHN1YnNlY3RvcnMuZmlsdGVyKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuU2VjdG9yID09PSAnRWxlY3RyaWNpdHknOwogICAgICB9KTsKICAgICAgdmFyIGZpbHRlckJ1aWxkID0gc3Vic2VjdG9ycy5maWx0ZXIoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5TZWN0b3IgPT09ICdCdWlsZGluZyc7CiAgICAgIH0pOwogICAgICB2YXIgZmlsdGVySW5kID0gc3Vic2VjdG9ycy5maWx0ZXIoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5TZWN0b3IgPT09ICdJbmR1c3RyeSc7CiAgICAgIH0pOwogICAgICB2YXIgZmlsdGVyVHIgPSBzdWJzZWN0b3JzLmZpbHRlcihmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLlNlY3RvciA9PT0gJ1RyYW5zcG9ydCc7CiAgICAgIH0pOwogICAgICB2YXIgeFBlcmMgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgMV0pLnJhbmdlUm91bmQoWzAsIHRoaXMuY2hhcnREZWZhdWx0cy53aWR0aCAtIDUwXSk7CiAgICAgIHZhciB4UGVyY0xhYmVscyA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFswLCAxMF0pLnJhbmdlUm91bmQoWzAsIHRoaXMuY2hhcnREZWZhdWx0cy53aWR0aCAtIDEwMF0pOwogICAgICB2YXIgeCA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFswLCBmaWx0ZXJFbGUucmVkdWNlKGZ1bmN0aW9uIChzdW0sIHZhbCkgewogICAgICAgIHJldHVybiBzdW0gKyB2YWwuRW1pc3Npb25zOwogICAgICB9LCAwKV0pLnJhbmdlUm91bmQoWzAsIHRoaXMuY2hhcnREZWZhdWx0cy53aWR0aCAtIDUwXSk7CiAgICAgIHZhciB4QiA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFswLCBmaWx0ZXJCdWlsZC5yZWR1Y2UoZnVuY3Rpb24gKHN1bSwgdmFsKSB7CiAgICAgICAgcmV0dXJuIHN1bSArIHZhbC5FbWlzc2lvbnM7CiAgICAgIH0sIDApXSkucmFuZ2VSb3VuZChbMCwgdGhpcy5jaGFydERlZmF1bHRzLndpZHRoIC0gNTBdKTsKICAgICAgdmFyIHhJID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oWzAsIGZpbHRlckluZC5yZWR1Y2UoZnVuY3Rpb24gKHN1bSwgdmFsKSB7CiAgICAgICAgcmV0dXJuIHN1bSArIHZhbC5FbWlzc2lvbnM7CiAgICAgIH0sIDApXSkucmFuZ2VSb3VuZChbMCwgdGhpcy5jaGFydERlZmF1bHRzLndpZHRoIC0gNTBdKTsKICAgICAgdmFyIHhUID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oWzAsIGZpbHRlclRyLnJlZHVjZShmdW5jdGlvbiAoc3VtLCB2YWwpIHsKICAgICAgICByZXR1cm4gc3VtICsgdmFsLkVtaXNzaW9uczsKICAgICAgfSwgMCldKS5yYW5nZVJvdW5kKFswLCB0aGlzLmNoYXJ0RGVmYXVsdHMud2lkdGggLSA1MF0pOwogICAgICB2YXIgc2NhbGVYQ2FyID0gc2VjdG9ycy5tYXAoZnVuY3Rpb24gKGl0ZW0sIGkpIHsKICAgICAgICB2YXIgc2NhbGVBcnJheTsKICAgICAgICB2YXIgY2FycmllcnNTY2FsZSA9IGNhcnJpZXJzLmZpbHRlcihmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGQuU2VjdG9yID09PSBpdGVtOwogICAgICAgIH0pOwoKICAgICAgICBmb3IgKHZhciBuID0gMDsgbiA8PSBpOyBuKyspIHsKICAgICAgICAgIHNjYWxlQXJyYXkgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgY2FycmllcnNTY2FsZS5yZWR1Y2UoZnVuY3Rpb24gKHN1bSwgdmFsKSB7CiAgICAgICAgICAgIHJldHVybiBzdW0gKyB2YWwuRW1pc3Npb25zOwogICAgICAgICAgfSwgMCldKS5yYW5nZVJvdW5kKFswLCBjaGFydERlZmF1bHRzLndpZHRoIC0gNTBdKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBzY2FsZUFycmF5OwogICAgICB9KTsKICAgICAgdmFyIHkgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgc3Vic2VjdG9ycy5yZWR1Y2UoZnVuY3Rpb24gKHN1bSwgdmFsKSB7CiAgICAgICAgcmV0dXJuIHN1bSArIHZhbC5FbWlzc2lvbnM7CiAgICAgIH0sIDApXSkucmFuZ2UoWzAsIHRoaXMuY2hhcnREZWZhdWx0cy5oZWlnaHQgLSAzMDBdKTsKICAgICAgdmFyIHlBID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oWzAsIHN1YnNlY3RvcnMucmVkdWNlKGZ1bmN0aW9uIChzdW0sIHZhbCkgewogICAgICAgIHJldHVybiBzdW0gKyB2YWwuRW1pc3Npb25zOwogICAgICB9LCAwKV0pLnJhbmdlKFswLCB0aGlzLmNoYXJ0RGVmYXVsdHMuaGVpZ2h0IC0gOTBdKTsKICAgICAgZDMuYXhpc1RvcCgpLnNjYWxlKHhJKTsKICAgICAgZDMuYXhpc1JpZ2h0KCkuc2NhbGUoeUEpOwogICAgICB2YXIgZm9ybWF0UGVyY2VudCA9IGQzLmZvcm1hdCgnLjAlJyk7CiAgICAgIHZhciB4QXhpcyA9IGQzLmF4aXNUb3AoKS5zY2FsZSh4UGVyYykudGlja1NpemUoMCkudGlja1BhZGRpbmcoMTApLnRpY2tWYWx1ZXMoWzAsIDFdKS50aWNrRm9ybWF0KGZvcm1hdFBlcmNlbnQpOwogICAgICB2YXIgeUF4aXMgPSBkMy5heGlzUmlnaHQoKS5zY2FsZSh5QSkudGlja3MoMCk7CiAgICAgIHJldHVybiB7CiAgICAgICAgeDogeCwKICAgICAgICB4QXhpczogeEF4aXMsCiAgICAgICAgeTogeSwKICAgICAgICB4QjogeEIsCiAgICAgICAgeEk6IHhJLAogICAgICAgIHhUOiB4VCwKICAgICAgICBzY2FsZVhDYXI6IHNjYWxlWENhciwKICAgICAgICB4UGVyYzogeFBlcmMsCiAgICAgICAgeUF4aXM6IHlBeGlzLAogICAgICAgIHhQZXJjTGFiZWxzOiB4UGVyY0xhYmVscwogICAgICB9OwogICAgfQogIH0sCiAgLy8gdGhpcyBjb21wdXRlZCBwcm9wZXJ0eSBuZWVkcyB0byBiZSBhZGRlZCBmb3IgdGhlIHNjcm9sbHl0ZWxsaW5nIHRvIGZ1bmN0aW9uCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKHsKICAgIHN0ZXA6IGZ1bmN0aW9uIHN0ZXAoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnNjcm9sbHl0ZWxsaW5nID8gc3RhdGUuc2Nyb2xseXRlbGxpbmcuc3RlcCA6IG51bGw7CiAgICB9CiAgfSkpCn07"},{"version":3,"sources":["carriersSelPaths.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <polyline class=\"line\" points=\"130.231275 771.590598 130.231275 22 415 668 415 531 626 476 626 317 691 262 691 109 285 109 285 262 303 317 303 476 361 530 361 667 118 722 118 773 197 815\"></polyline>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport { mapState } from 'vuex'\n\nimport emissionsSubsectors from '../assets/subsectors-emissions-nest.json'\nimport energyCarriers from '../assets/energy-carriers-world.json'\n\nexport default {\n  name: 'CarriersPath',\n  data () {\n    return {\n      subsectors: emissionsSubsectors,\n      carriers: energyCarriers,\n      chartDefaults: {\n        width: 1000,\n        height: 700,\n        margin: {\n          top: 5,\n          right: 50,\n          bottom: 25,\n          left: 0\n        }\n      },\n      selected: null\n    }\n  },\n  methods: {\n    select (event) {\n      var targetId = event.currentTarget.id\n      if (this.selected === targetId) this.selected = null\n      else this.selected = targetId\n    },\n    getScale () {\n      const subsectors = this.subsectors\n      const carriers = this.carriers\n      const chartDefaults = this.chartDefaults\n      const sectors = ['Electricity', 'Building', 'Industry', 'Transport']\n      var filterEle = subsectors.filter(function (d) { return d.Sector === 'Electricity' })\n      var filterBuild = subsectors.filter(function (d) { return d.Sector === 'Building' })\n      var filterInd = subsectors.filter(function (d) { return d.Sector === 'Industry' })\n      var filterTr = subsectors.filter(function (d) { return d.Sector === 'Transport' })\n\n      var xPerc = d3\n        .scaleLinear()\n        .domain([0, 1])\n        .rangeRound([0, this.chartDefaults.width - 50])\n\n      var xPercLabels = d3\n        .scaleLinear()\n        .domain([0, 10])\n        .rangeRound([0, this.chartDefaults.width - 100])\n\n      var x = d3\n        .scaleLinear()\n        .domain([0, filterEle.reduce((sum, val) => sum + val.Emissions, 0)])\n        .rangeRound([0, this.chartDefaults.width - 50])\n\n      var xB = d3\n        .scaleLinear()\n        .domain([0, filterBuild.reduce((sum, val) => sum + val.Emissions, 0)])\n        .rangeRound([0, this.chartDefaults.width - 50])\n\n      var xI = d3\n        .scaleLinear()\n        .domain([0, filterInd.reduce((sum, val) => sum + val.Emissions, 0)])\n        .rangeRound([0, this.chartDefaults.width - 50])\n\n      var xT = d3\n        .scaleLinear()\n        .domain([0, filterTr.reduce((sum, val) => sum + val.Emissions, 0)])\n        .rangeRound([0, this.chartDefaults.width - 50])\n\n      var scaleXCar = sectors.map(function (item, i) {\n        var scaleArray\n        var carriersScale = carriers.filter(function (d) { return d.Sector === item })\n        for (var n = 0; n <= i; n++) {\n          scaleArray = d3\n            .scaleLinear()\n            .domain([0, carriersScale.reduce((sum, val) => sum + val.Emissions, 0)])\n            .rangeRound([0, chartDefaults.width - 50])\n        }\n        return scaleArray\n      })\n\n      var y = d3\n        .scaleLinear()\n        .domain([0, subsectors.reduce((sum, val) => sum + val.Emissions, 0)])\n        .range([0, this.chartDefaults.height - 300])\n\n      var yA = d3\n        .scaleLinear()\n        .domain([0, subsectors.reduce((sum, val) => sum + val.Emissions, 0)])\n        .range([0, this.chartDefaults.height - 90])\n\n      d3.axisTop().scale(xI)\n      d3.axisRight().scale(yA)\n\n      var formatPercent = d3.format('.0%')\n\n      var xAxis = d3\n        .axisTop()\n        .scale(xPerc)\n        .tickSize(0)\n        .tickPadding(10)\n        .tickValues([0, 1])\n        .tickFormat(formatPercent)\n\n      var yAxis = d3\n        .axisRight()\n        .scale(yA)\n        .ticks(0)\n\n      return {\n        x,\n        xAxis,\n        y,\n        xB,\n        xI,\n        xT,\n        scaleXCar,\n        xPerc,\n        yAxis,\n        xPercLabels\n      }\n    }\n  },\n  // this computed property needs to be added for the scrollytelling to function\n  computed: {\n    ...mapState({\n      step: state => state.scrollytelling ? state.scrollytelling.step : null\n    })\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n@import \"library/src/style/variables.scss\";\n.line {\n  fill: none;\n  stroke: black;\n}\n.hidden {\n  fill: white;\n  opacity: 0.5;\n}\n</style>\n"],"sourceRoot":"src/components"}]}