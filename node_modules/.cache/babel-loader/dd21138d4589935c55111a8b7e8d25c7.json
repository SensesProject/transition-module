{"remainingRequest":"/Users/francescamorini/projects/transition-module/node_modules/babel-loader/lib/index.js!/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/transition-module/src/components/chartanimated.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/francescamorini/projects/transition-module/src/components/chartanimated.vue","mtime":1572536223171},{"path":"/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/transition-module/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZXZlcnkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2ZyYW5jZXNjYW1vcmluaS9wcm9qZWN0cy90cmFuc2l0aW9uLW1vZHVsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IEF4aXMgZnJvbSAiLi9heGlzLnZ1ZSI7CmltcG9ydCBBbmltYXRlZGN1cnNvciBmcm9tICIuL2FuaW1hdGVkY3Vyc29yLnZ1ZSI7CmltcG9ydCBQb3BVcFJpZ2h0IGZyb20gIi4vTGluZWNoYXJ0UG9wVXAtcmlnaHQudnVlIjsKaW1wb3J0IGVtaXNzaW9uc0RhdGEgZnJvbSAiLi4vYXNzZXRzL2VtaXNzaW9ucy5qc29uIjsKaW1wb3J0IHNlY3RvcnMgZnJvbSAiLi4vYXNzZXRzL2VtaXNzaW9ucy1zdGFja2VkLmpzb24iOwppbXBvcnQgc3ViRW1pc3Npb25zIGZyb20gIi4uL2Fzc2V0cy9zdWJlbWlzc2lvbnMuanNvbiI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnY2hhcnRhbmltYXRlZCcsCiAgY29tcG9uZW50czogewogICAgQXhpczogQXhpcywKICAgIEFuaW1hdGVkY3Vyc29yOiBBbmltYXRlZGN1cnNvciwKICAgIFBvcFVwUmlnaHQ6IFBvcFVwUmlnaHQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlbWlzc2lvbnM6IGVtaXNzaW9uc0RhdGEsCiAgICAgIHNlY3RvcnM6IHNlY3RvcnMsCiAgICAgIHN1YmVtaXNzaW9uczogc3ViRW1pc3Npb25zLAogICAgICBjaGFydERlZmF1bHRzOiB7CiAgICAgICAgd2lkdGg6IDEwMDAsCiAgICAgICAgaGVpZ2h0OiA0MDAsCiAgICAgICAgY2hhcnRJZDogJ2xpbmVjaGFydC12dWUnLAogICAgICAgIHRpdGxlOiAnRW1pc3Npb25zJywKICAgICAgICBtYXJnaW46IHsKICAgICAgICAgIHRvcDogNSwKICAgICAgICAgIHJpZ2h0OiA1MCwKICAgICAgICAgIGJvdHRvbTogMjUsCiAgICAgICAgICBsZWZ0OiAwCiAgICAgICAgfSwKICAgICAgICBkYXRhOiBbXQogICAgICB9LAogICAgICBsaW5lOiAnJywKICAgICAgdHJhbnNsYXRlOiB0aGlzLmdldFRyYW5zbGF0aW9uLAogICAgICB0cmFuc2xhdGVMaW5lOiAndHJhbnNsYXRlKDAsMCknLAogICAgICB0cm5zWTogJ3RyYW5zbGF0ZSgwLDApJywKICAgICAgdHJuc1g6IHRoaXMuZ2V0VHJuc3gsCiAgICAgIHRvZ2dsZUNsYXNzOiB0cnVlLAogICAgICBjaGFydFdpZHRoOiB0aGlzLmdldFdpZHRoCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgbmV3U2NhbGU6IGZ1bmN0aW9uIG5ld1NjYWxlKCkgewogICAgICB2YXIgcGFyc2VEYXRlID0gZDMudGltZVBhcnNlKCclWScpOwogICAgICB0aGlzLmVtaXNzaW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgZC5kYXRlID0gcGFyc2VEYXRlKGQuWWVhcik7CiAgICAgIH0pOwogICAgICB2YXIgeCA9IGQzLnNjYWxlVGltZSgpLmRvbWFpbihbZDMubWluKHRoaXMuZW1pc3Npb25zLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmRhdGU7CiAgICAgIH0pLCBkMy5tYXgodGhpcy5lbWlzc2lvbnMsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuZGF0ZTsKICAgICAgfSldKS5yYW5nZVJvdW5kKFswLCB0aGlzLmNoYXJ0RGVmYXVsdHMud2lkdGhdKTsKICAgICAgdmFyIHkgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgNDAwMDAwMDBdKS5yYW5nZShbdGhpcy5jaGFydERlZmF1bHRzLmhlaWdodCwgLTEwMF0pOwogICAgICBkMy5heGlzQm90dG9tKCkuc2NhbGUoeCk7CiAgICAgIGQzLmF4aXNMZWZ0KCkuc2NhbGUoeSk7CiAgICAgIHZhciB4QXhpcyA9IGQzLmF4aXNCb3R0b20oKS5zY2FsZSh4KS50aWNrU2l6ZSgwKS50aWNrRm9ybWF0KGQzLnRpbWVGb3JtYXQoJyVZJykpLnRpY2tzKGQzLnRpbWVZZWFyLmV2ZXJ5KDUpKTsKICAgICAgdmFyIHlBeGlzID0gZDMuYXhpc1JpZ2h0KCkuc2NhbGUoeSkudGlja1ZhbHVlcyhbMTAwMDAwMDAsIDIwMDAwMDAwLCAzMDAwMDAwMCwgNDAwMDAwMDBdKS50aWNrU2l6ZSg4MzApLnRpY2tQYWRkaW5nKDYpOwogICAgICByZXR1cm4gewogICAgICAgIHg6IHgsCiAgICAgICAgeTogeSwKICAgICAgICB4QXhpczogeEF4aXMsCiAgICAgICAgeUF4aXM6IHlBeGlzCiAgICAgIH07CiAgICB9LAogICAgLy8gdGhpcyBzZXQgb2YgZnVuY3Rpb25zIGFyZSB0cmFuc2Zvcm1pbmcgdGhlIHNjYWxlIG9mIHRoZSBncmFwaCBmcm9tIHN0ZXAgMyBhbmQgNAogICAgZ2V0VHJuc3g6IGZ1bmN0aW9uIGdldFRybnN4KGNoYXJ0RGVmYXVsdHMpIHsKICAgICAgdmFyIHQgPSAndHJhbnNsYXRlKDAsJyArIHRoaXMuY2hhcnREZWZhdWx0cy5oZWlnaHQgKyAnKSc7CiAgICAgIHJldHVybiB0OwogICAgfSwKICAgIGdldFRyYW5zbGF0aW9uOiBmdW5jdGlvbiBnZXRUcmFuc2xhdGlvbihjaGFydERlZmF1bHRzKSB7CiAgICAgIHZhciB0ciA9ICd0cmFuc2xhdGUoJyArIDEwMCArICcsJyArIDIwMCArICcpJzsKCiAgICAgIGlmICh0aGlzLnN0ZXAgPT09IDQpIHsKICAgICAgICB0ciA9ICd0cmFuc2xhdGUoJyArIC0zMCArICcsJyArIDI4MCArICcpJzsKICAgICAgfQoKICAgICAgcmV0dXJuIHRyOwogICAgfSwKICAgIGdldFdpZHRoOiBmdW5jdGlvbiBnZXRXaWR0aChjaGFydERlZmF1bHRzKSB7CiAgICAgIHZhciB3aWR0aCA9ICc5MCUnOwoKICAgICAgaWYgKHRoaXMuc3RlcCA9PT0gNCkgewogICAgICAgIHdpZHRoID0gJzEwMCUnOwogICAgICB9CgogICAgICByZXR1cm4gd2lkdGg7CiAgICB9CiAgfSwKICAvLyB0aGlzIGNvbXB1dGVkIHByb3BlcnR5IG5lZWRzIHRvIGJlIGFkZGVkIGZvciB0aGUgc2Nyb2xseXRlbGxpbmcgdG8gZnVuY3Rpb24KICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoewogICAgc3RlcDogZnVuY3Rpb24gc3RlcChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2Nyb2xseXRlbGxpbmcgPyBzdGF0ZS5zY3JvbGx5dGVsbGluZy5zdGVwIDogbnVsbDsKICAgIH0KICB9KSwgewogICAgLy8gdGhpcyBmdW5jdGlvbiByZXR1cm4gYW4gYXJyYXkgd2l0aCBwYXRocyBmb3IgdGhlIHN0YWNrZWQgYmFyY2hhcnQKICAgIGl0ZW1zOiBmdW5jdGlvbiBpdGVtcygpIHsKICAgICAgdmFyIGFyZWFzID0gWydBdmlhdGlvbicsICdSb2FkJywgJ090aGVyJywgJ1NoaXBwaW5nJywgJ0NvbWJ1c3Rpb24nLCAnUHJvZHVjdGlvbicsICdTb2x2ZW50cycsICdPdGhlclByb2MnLCAnSW5kV2FzdGUnLCAnQ29tbVJlcycsICdBZ3JpY3VsdHVyZScsICdQdWJsaWMnLCAnQXV0b3Byb2R1Y2VkJ107CiAgICAgIHZhciBzY2FsZSA9IHRoaXMubmV3U2NhbGUoKTsKICAgICAgdmFyIHBhcnNlRGF0ZSA9IGQzLnRpbWVQYXJzZSgnJVknKTsKICAgICAgdmFyIGRhdGEgPSB0aGlzLnN1YmVtaXNzaW9uczsKICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgZC5kYXRlID0gcGFyc2VEYXRlKGQuWWVhcik7CiAgICAgIH0pOwogICAgICB2YXIgYXJlYUZpeGVkID0gZDMuYXJlYSgpLngoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gc2NhbGUueChkLmRhdGUpOwogICAgICB9KS5jdXJ2ZShkMy5jdXJ2ZUNhdG11bGxSb20pOwogICAgICB2YXIgbmV3QXJlYXMgPSBhcmVhcy5tYXAoZnVuY3Rpb24gKGl0ZW0sIGkpIHsKICAgICAgICBhcmVhRml4ZWQueTAoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHZhciBzdW0gPSAwOwoKICAgICAgICAgIGZvciAodmFyIG4gPSAwOyBuIDwgaTsgbisrKSB7CiAgICAgICAgICAgIHN1bSA9IHN1bSArIGRbYXJlYXNbbl1dOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBzY2FsZS55KHN1bSk7CiAgICAgICAgfSkueTEoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHZhciBzdW0gPSAwOwoKICAgICAgICAgIGZvciAodmFyIG4gPSAwOyBuIDw9IGk7IG4rKykgewogICAgICAgICAgICBzdW0gPSBzdW0gKyBkW2FyZWFzW25dXTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gc2NhbGUueShzdW0pOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiB7CiAgICAgICAgICBkOiBhcmVhRml4ZWQoZGF0YSksCiAgICAgICAgICBpZDogYXJlYXNbaV0KICAgICAgICB9OwogICAgICB9KTsKICAgICAgcmV0dXJuIG5ld0FyZWFzOwogICAgfQogIH0pCn07"},{"version":3,"sources":["chartanimated.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<g class=\"animated-subsectors\" v-if=\"step === 4\">\n    <g class='substacked' v-bind:transform='translate()'>\n    <g class='stacked-SubEmissions' v-if=\"step >=3 && step <=4\" clip-path=\"url(#cut-off-graph)\">\n        <path class=\"subemissions\" v-for=\"(item, i) in items\" v-bind:key='i' :d='item.d' :id='item.id'/>\n    </g>\n    <g class=\"axis-step4\" v-if=\"step == 4\">\n      <Axis class='xA' v-bind:scales='newScale().xAxis' v-bind:chartDefaults='chartDefaults' v-bind:data='emissions' v-bind:trns='trnsX()'/>\n      <Axis class='yA' v-bind:scales='newScale().yAxis' v-bind:chartDefaults='chartDefaults' v-bind:data='emissions' v-bind:trns='trnsY'/>\n    </g>\n    </g>\n    <Animatedcursor v-if=\"step == 4\"/>\n</g>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport { mapState } from 'vuex'\nimport Axis from './axis.vue'\nimport Animatedcursor from './animatedcursor.vue'\nimport PopUpRight from './LinechartPopUp-right.vue'\n\nimport emissionsData from '../assets/emissions.json'\nimport sectors from '../assets/emissions-stacked.json'\nimport subEmissions from '../assets/subemissions.json'\n\nexport default {\n  name: 'chartanimated',\n  components: {\n    Axis,\n    Animatedcursor,\n    PopUpRight\n  },\n  data () {\n    return {\n      emissions: emissionsData,\n      sectors: sectors,\n      subemissions: subEmissions,\n      chartDefaults: {\n        width: 1000,\n        height: 400,\n        chartId: 'linechart-vue',\n        title: 'Emissions',\n        margin: {\n          top: 5,\n          right: 50,\n          bottom: 25,\n          left: 0\n        },\n        data: []\n      },\n      line: '',\n      translate: this.getTranslation,\n      translateLine: 'translate(0,0)',\n      trnsY: 'translate(0,0)',\n      trnsX: this.getTrnsx,\n      toggleClass: true,\n      chartWidth: this.getWidth\n    }\n  },\n  methods: {\n    newScale () {\n      var parseDate = d3.timeParse('%Y')\n      this.emissions.forEach(function (d) {\n        d.date = parseDate(d.Year)\n      })\n      var x = d3\n        .scaleTime()\n        .domain([d3.min(this.emissions, d => d.date), d3.max(this.emissions, d => d.date)])\n        .rangeRound([0, this.chartDefaults.width])\n\n      var y = d3\n        .scaleLinear()\n        .domain([0, 40000000])\n        .range([this.chartDefaults.height, -100])\n\n      d3.axisBottom().scale(x)\n      d3.axisLeft().scale(y)\n\n      var xAxis = d3\n        .axisBottom()\n        .scale(x)\n        .tickSize(0)\n        .tickFormat(d3.timeFormat('%Y'))\n        .ticks(d3.timeYear.every(5))\n\n      var yAxis = d3\n        .axisRight()\n        .scale(y)\n        .tickValues([10000000, 20000000, 30000000, 40000000])\n        .tickSize(830)\n        .tickPadding(6)\n\n      return {\n        x,\n        y,\n        xAxis,\n        yAxis\n      }\n    },\n    // this set of functions are transforming the scale of the graph from step 3 and 4\n    getTrnsx (chartDefaults) {\n      const t = 'translate(0,' + this.chartDefaults.height + ')'\n      return t\n    },\n    getTranslation (chartDefaults) {\n      var tr = 'translate(' + 100 + ',' + 200 + ')'\n      if (this.step === 4) {\n        tr = 'translate(' + -30 + ',' + 280 + ')'\n      }\n      return tr\n    },\n    getWidth (chartDefaults) {\n      var width = '90%'\n      if (this.step === 4) {\n        width = '100%'\n      }\n      return width\n    }\n  },\n  // this computed property needs to be added for the scrollytelling to function\n  computed: {\n    ...mapState({\n      step: state => state.scrollytelling ? state.scrollytelling.step : null\n    }),\n// this function return an array with paths for the stacked barchart\n    items () {\n      const areas = ['Aviation', 'Road', 'Other', 'Shipping', 'Combustion', 'Production', 'Solvents', 'OtherProc', 'IndWaste', 'CommRes', 'Agriculture', 'Public', 'Autoproduced']\n\n      const scale = this.newScale()\n\n      const parseDate = d3.timeParse('%Y')\n      const data = this.subemissions\n\n      data.forEach(function (d) {\n        d.date = parseDate(d.Year)\n      })\n\n      var areaFixed = d3\n        .area()\n        .x(d => { return scale.x(d.date) })\n        .curve(d3.curveCatmullRom)\n\n      const newAreas = areas.map(function (item, i) {\n        areaFixed\n          .y0(d => {\n            let sum = 0\n            for (let n = 0; n < i; n++) {\n              sum = sum + d[areas[n]]\n            }\n            return scale.y(sum)\n          })\n          .y1(d => {\n            let sum = 0\n            for (let n = 0; n <= i; n++) {\n              sum = sum + d[areas[n]]\n            }\n            return scale.y(sum)\n          })\n        return {\n          d: areaFixed(data),\n          id: areas[i]\n        }\n      })\n\n      return newAreas\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n// @import \"library/src/style/base.scss\";\n@import \"library/src/style/variables.scss\";\n\nsvg {\n  position:absolute;\n}\n\n.subemissions {\n  stroke-width: 0.5;\n}\n.subemissions:hover {\n  fill: $color-blue;\n}\n\n#Combustion, #Production, #Solvents, #OtherProc, #IndWaste {\n  fill: darken($color-yellow, 30%);\n  stroke: darken( $color-violet, 30% );\n\n}\n\n#CommRes, #Agriculture {\n  fill: darken( $color-yellow, 20% );\n  stroke: darken( $color-violet, 20% );\n\n}\n\n#Aviation, #Road, #Other, #Shipping {\n  fill: darken( $color-yellow, 40% );\n  stroke: darken( $color-violet, 40% );\n\n}\n\n#Public, #Autoproduced {\n  fill: darken( $color-yellow, 5% );\n  stroke: darken( $color-violet, 5% );\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}